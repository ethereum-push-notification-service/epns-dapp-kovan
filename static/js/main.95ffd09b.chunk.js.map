{"version":3,"sources":["helpers/CryptoHelper.js","connectors.ts","hooks.ts","components/AliasVerificationModal.js","helpers/EPNSCoreHelper.js","config/index.js","components/NotificationToast.js","api/index.js","singletons/ChannelsDataStore.js","segments/Feedbox.tsx","components/DisplayNotice.js","assets/Device.js","components/ViewChannelItem.js","components/Faucets.js","singletons/UsersDataStore.js","segments/ViewChannels.tsx","components/ViewInfoItem.js","segments/Info.tsx","assets/icons/index.js","components/SendNotifications.tsx","components/ChannelSettings.tsx","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/CreateChannel.js","components/blockies.js","components/SharedStyling.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","config","RPC_URLS","3","process","REACT_APP_RPC_URL_3","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","ethers","AliasVerificationModal","onClose","onSuccess","verificationStatus","useWeb3React","account","active","error","library","signer","getSigner","modalRef","useRef","polygonCommsContract","Contract","addresses","epnsPolyComm","abis","epnsComm","useState","mainAdress","setMainAddress","loading","setLoading","useClickAway","Overlay","AliasModal","ref","align","textTransform","spacing","weight","bg","color","padding","CustomInput","required","placeholder","radius","border","value","onChange","e","target","margin","flex","self","disabled","onClick","verifyChannelAlias","tx","setTimeout","catch","type","height","width","StyledInput","cursor","size","styled","Input","div","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","channelById","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","metricFormatter","num","digits","si","symbol","toFixed","replace","dotenv","etherscanToken","NotificationWrapper","Toaster","NotificationToast","notification","clearToast","LoaderToast","notificationTitle","notificationBody","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","BASE_URL","postReq","path","obj","axios","post","headers","ChannelEvents","ChannelsDataStore","state","channelsMeta","channelsJson","callbacks","epnsReadProvider","epnsCommReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","Object","entries","callback","Subscribe","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelsMetaAsync","startIndex","pageCount","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","channelAddress","getChannelMetaViaAddressAsync","getChannelSubscribers","op","data","subscribers","getChannelJsonAsync","instance","Items","Container","Feedbox","React","setEpnsReadProvider","notifications","setNotifications","finishedFetching","setFinishedFetching","showToast","currentPage","setCurrentPage","useEffect","ethCommsContract","epnsEthComm","ALLOWED_CORE_NETWORK","loadNotifications","api","fetchNotifications","count","results","parsedResponse","parseApiResponse","oldNotifications","subscribe","handlePagination","prevPage","newPage","newNotification","onReceive","existingNotifications","fn","event","cb","eventChannelAddress","eventUserAddress","identityHex","userAddress","hex2ascii","notificationId","toLocaleLowerCase","ipfsId","channelJson","ipfsNotification","id","indexTimeStamp","now","title","name","body","memberExists","isSubscribed","off","bind","oneNotification","index","cta","app","icon","image","Number","showWayPoint","onEnter","Notice","span","props","theme","css","DisplayNotice","animationIn","animationOut","durationOut","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SkeletonWrapper","atW","atH","borderRadius","marginBottom","marginRight","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","img","ChannelInfo","ChannelTitle","ChannelTitleLink","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Subscribers","SubscribersCount","Pool","PoolShare","LineBreak","ChannelActions","ChannelActionButton","button","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObject","isOwner","epnsWriteProvide","epnsCommWriteProvider","EPNS_DOMAIN","version","verifyingContract","setChannelJson","subscribed","setSubscribed","memberCount","setMemberCount","isPushAdmin","setIsPushAdmin","isVerified","setIsVerified","isBlocked","setIsBlocked","vLoading","setvLoading","bLoading","setBLoading","txInProgress","setTxInProgress","onCoreNetwork","fetchChannelJson","channelState","channelSubscribers","find","sub","toLowerCase","pushChannelAdmin","channelAdmin","getChannelVerfication","channelVerifiedStatus","Boolean","subscribeAction","notificationToast","toaster","subscriber","action","_signTypedData","signature","txToast","contractAddress","res","update","render","TYPE","SUCCESS","ERROR","finally","unsubscribeAction","style","unsubscriber","src","href","rel","info","poolContribution","blockChannel","INFO","wait","verifyChannel","unverifyChannel","Faucets","overflow","pos","top","right","direction","textAlign","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","ContainerInfo","CenterContainer","ViewChannels","controlAt","moreLoading","setMoreLoading","setChannels","setChannelLength","paginatedChannels","setPaginatedChannels","setUser","owner","setOwner","page","setPage","channelsVisited","fetchInitialsChannelMeta","prev","slice","updateCurrentPage","loadMoreChannelMeta","ownerAddr","totalChannelsLength","newPageNumber","startingPoint","moreChannels","oldChannels","keys","channellized","AppLink","AppLinkText","ViewInfoItem","REACT_APP_IOS_STAGING_DAPP_URL","REACT_APP_ANDROID_STAGING_DAPP_URL","InfoBox","Info","CloseIcon","xmlns","viewBox","data-name","transform","x2","fill","stroke","stroke-linecap","stroke-width","y2","NFTypes","LIMITER_KEYS","DropdownStyledParent","MultiRecipientsContainer","DropdownStyled","Dropdown","SendNotifications","channelAccount","epnsWriteProvider","nfProcessing","setNFProcessing","setChannelState","isChannelDeactivated","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","loadingChannels","setLoadingChannels","includes","bodyValidated","validated","handleSendMessage","preventDefault","epnscore","communicatorContract","ETH_COMMUNICATOR_NETWORK","nsub","nmsg","asub","amsg","acta","aimg","k","publickey","storagePointer","isEmpty","jsonPayload","JSON","stringify","at","add","identityBytes","toUtf8Bytes","anotherSendTxPromise","sendNotification","field","trim","justify","onSubmit","minWidth","options","option","display","Switch","checked","z","oneRecipient","recipientAddress","filteredRecipients","rec","removeRecipient","onKeyPress","oldRecipients","Array","Set","text","borderBottom","rows","autocomplete","PopupOverlay","PopupSlider","Section","ChannelSettings","setKey","popupRef","showPopup","setShowPopup","channelStakeFees","setChannelStakeFees","poolContrib","setPoolContrib","isChannelBlocked","getChannelData","coreProvider","getDefaultProvider","etherscan","bn","number","defaultValue","BigNumber","tokensBN","amount","mul","pow","activateChannel","daiContract","dai","erc20","fees","parseUnits","sendTransactionPromise","approve","waitForTransaction","hash","bignum","bignumstr","reactivateChannel","deactivateChannel","amountToBeConverted","parseInt","pushValue","quote","PUSH","price","amountsOut","Slider","onChangeCommitted","aria-labelledby","valueLabelDisplay","step","marks","min","max","ChannelOwnerDashboard","ChannelCreationDashboard","CreateChannel","Controls","ControlButton","ControlImage","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","setBadgeCount","bellPressed","ReactGA","pageview","setEpnsCommReadProvider","setEpnsWriteProvider","setEpnsCommWriteProvider","setControlAt","modalOpen","setModalOpen","adminStatusLoaded","setAdminStatusLoaded","aliasEthAccount","setAliasEthAccount","aliasVerified","setAliasVerified","setChannelAdmin","ethAddress","status","coreContractInstance","commAddress","commContractInstance","coreSignerInstance","communicatorSignerInstance","userClickedAt","checkUserForChannelRights","controlIndex","listenerForChannelRights","ownerAccount","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","createElement","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","className","HeaderContainer","Logo","PrimaryTheme","ThirdTheme","Connection","phase","Header","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","logo","WalletConnect","Ledger","Portis","getLibrary","provider","connector","gottenProvider","providers","Web3Provider","newNetwork","oldNetwork","window","location","reload","App","activate","setBellPressed","initialize","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","currentConnector","ProviderButton","ProviderImage","newestOnTop","rtl","pauseOnFocusLoss","header","ToastContainer","attrs","hostname","match","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ceaErc20","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsCommAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","ALIAS_CHAINS","Step","activeBG","Line","h1","Minter","textarea","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","chainDetails","setChainDetails","channelName","setChannelName","channelAlias","setChannelAlias","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","chainDetailsSplit","blockchain","chain_id","createChannelWithFees","mintDai","mintTransactionPromise","mint","onChangeStatus","meta","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","maxlength","classNamePrefix","colors","primary25","primary","selectedOption","paddingLeft","randseed","rand","t","createColor","buildOpts","newOpts","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","y","row","x","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","create","module","exports","section","gradient","Content","ItemBreak","Item","wrap","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","arcRGB","h2","family","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField"],"mappings":"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","file":"static/js/main.95ffd09b.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\nimport {encrypt, decrypt} from 'eccrypto';\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst CryptoHelper = {\n  // To Encrypt with AES\n  encryptWithAES: function(message, key) {\n    return CryptoJS.AES.encrypt(message, key).toString();\n  },\n  // To Decrypt with AES\n  decryptWithAES: function(message, key) {\n    let bytes  = CryptoJS.AES.decrypt(message, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  },\n  // To Form Encryted Secret, no more than 15 characters supported\n  encryptWithECIES: async function(message, publicKey) {\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\n\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\n\n    // Not using it since sqlite2 has some error with this\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\n\n    return encryptedSecret;\n  },\n  // To Form Decrypted Secret, no more than 15 characters supported\n  decryptWithECIES: async function(message, privateKey) {\n    // Message is always compressed, not using because sqlite2 has some error with this\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\n\n    return await this.decryptWithPrivateKey(message, privateKey);\n  },\n  // Encryption with public key\n  encryptWithPublicKey: async function(message, publicKey) {\n    // Convert compressed public key, starts with 03 or 04\n    const pubKeyUint8Array = Uint8Array.from(\n      new Buffer(publicKey, 'hex')\n    );\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\n\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\n\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\n\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\n\n    return encrypt(\n        pubKey,\n        Buffer(message)\n    ).then(encryptedBuffers => {\n      const cipher = {\n          iv: encryptedBuffers.iv.toString('hex'),\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n          mac: encryptedBuffers.mac.toString('hex')\n      };\n      // use compressed key because it's smaller\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\n      const input = Uint8Array.from(\n        new Buffer(cipher.ephemPublicKey, 'hex')\n      );\n      const keyConvert = publicKeyConvert(input, true)\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\n\n      const keyConvertBuffer = new Buffer(keyConvert);\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n      // console.log(keyConvertBuffer);\n\n      //console.log(keyConvert);\n      const compressedKey = keyConvertBuffer.toString('hex')\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\n      // console.log(compressedKey);\n\n      const ret = Buffer.concat([\n        new Buffer(cipher.iv, 'hex'), // 16bit\n        new Buffer(compressedKey, 'hex'), // 33bit\n        new Buffer(cipher.mac, 'hex'), // 32bit\n        new Buffer(cipher.ciphertext, 'hex') // var bit\n      ]).toString('hex')\n\n      return ret\n    });\n  },\n  // Decryption with public key\n  decryptWithPrivateKey: async function(message, privateKey) {\n    let encrypted = message;\n    const buf = new Buffer(encrypted, 'hex');\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\n\n    encrypted = {\n      iv: buf.toString('hex', 0, 16),\n      ephemPublicKey: buf.toString('hex', 16, 49),\n      mac: buf.toString('hex', 49, 81),\n      ciphertext: buf.toString('hex', 81, buf.length)\n    };\n    // decompress publicKey\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\n    const keyConvert = publicKeyConvert(input, false)\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\n\n    const keyConvertBuffer = new Buffer(keyConvert);\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n    // console.log(keyConvertBuffer);\n\n    //console.log(keyConvert);\n    const uncompressedKey = keyConvertBuffer.toString('hex')\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\n    // console.log(uncompressedKey);\n\n    encrypted.ephemPublicKey = uncompressedKey;\n    const twoStripped = privateKey.substring(2)\n\n    const encryptedBuffer = {\n      iv: new Buffer(encrypted.iv, 'hex'),\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\n      mac: new Buffer(encrypted.mac, 'hex')\n    };\n\n    return decrypt(\n      new Buffer(twoStripped, 'hex'),\n      encryptedBuffer\n    ).then(decryptedBuffer => decryptedBuffer.toString());\n  },\n  // Testing of Encryption and Decryption from Public to Private key\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\n    const startTime = new Date();\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\n\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\n    //console.log(compressedKey);\n\n    // const bytesCompKey = Uint8Array.from(compressedKey);\n    //console.log(bytesCompKey);\n\n    const msgToEncrypt = \"PartialStringAS\";\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\n    console.log(\"Encryped Message With compressed public key:\" + msg);\n\n    const encryptionTime = new Date().getTime() - startTime.getTime();\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\n\n    // Decrypt this message\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\n\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\n  },\n  // To output messge payload if required\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\n    // Output AES\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\n    console.log(\"---------------------\");\n    console.log(\"secret --> \");\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\n    const asubE = this.encryptWithAES(subject, secret);\n    const amsgE = this.encryptWithAES(message, secret);\n    const actaE = this.encryptWithAES(calltoaction, secret);\n    const aimgE = this.encryptWithAES(imageurl, secret);\n\n    console.log(secretEncrypted);\n    console.log(\"asub --> \");\n    console.log(asubE);\n    console.log(\"amsg --> \");\n    console.log(amsgE);\n    console.log(\"acta --> \");\n    console.log(actaE);\n    console.log(\"aimg --> \");\n    console.log(aimgE);\n    console.log(\"decrypted secret --> \");\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\n    console.log(\"decrypted asub --> \");\n    console.log(this.decryptWithAES(asubE, secret));\n    console.log(\"decrypted amsg --> \");\n    console.log(this.decryptWithAES(amsgE, secret));\n    console.log(\"decrypted acta --> \");\n    console.log(this.decryptWithAES(actaE, secret));\n    console.log(\"decrypted aimg --> \");\n    console.log(this.decryptWithAES(aimgE, secret));\n  },\n  makeid: function (length) {\n     var result           = '[' + new Date().toISOString() + '] ';\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n     var charactersLength = characters.length;\n     for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  }\n};\n\nexport default CryptoHelper;\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\nconst SUPPORTED_CHAIN_IDS = [\n  42 ,//for ropsten\n  80001 //for mumbai\n];\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  3: process.env.REACT_APP_RPC_URL_3 as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\n\n// export const network = new NetworkConnector({\n//   urls: { 3: RPC_URLS[3] },\n//   defaultChainId: 3,\n//   pollingInterval: POLLING_INTERVAL\n// })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 3: RPC_URLS[3] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\nexport const ledger = new LedgerConnector({ chainId: 3, url: RPC_URLS[3], pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: 3,\n  url: RPC_URLS[3],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'support@epns.io',\n  manifestAppUrl: 'https://staging-app.epns.io'\n})\n\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [3, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AliasVerificationModal({\n    onClose,onSuccess, verificationStatus\n}) {\n    const { active, error, account, library, chainId } = useWeb3React();\n    const signer = library.getSigner(account);\n\n    const modalRef = useRef(null);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const submitAlias = () => {\n        setLoading('loading')\n        const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(mainAdress);\n        anotherSendTxPromise\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n            // await tx.wait(1);\n            // setLoading(\"Transaction Mined!\");\n        })\n        .catch(() => {\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Verify </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Alias</Span>\n                    </H2>\n                    {\n                        verificationStatus === null ?\n                        (\n                            <H3>There has been an error in the verification of your alias, Please contact the admin</H3>\n                        ) : (\n                            <H3>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\n                        )\n                    }\n                </Item>\n                {\n                    verificationStatus !== null && (\n                        <>\n                            <Item align=\"flex-start\">\n                                <CustomInput\n                                    required\n                                    placeholder=\"Enter ethereum wallet address of this channel\"\n                                    radius=\"4px\"\n                                    padding=\"12px\"\n                                    border=\"1px solid #674c9f\"\n                                    bg=\"#fff\"\n                                    value={mainAdress}\n                                    onChange={(e) => {setMainAddress(e.target.value)}}\n                                />\n                            </Item>\n                            <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                                <Button\n                                    bg='#e20880'\n                                    color='#fff'\n                                    flex=\"1\"\n                                    radius=\"0px\"\n                                    padding=\"20px 10px\"\n                                    disabled={mainAdress.length !== 42}\n                                    onClick={submitAlias}\n                                >\n                                    { loading && <Loader\n                                        type=\"Oval\"\n                                        color=\"#FFF\"\n                                        height={16}\n                                        width={16}\n                                        />\n                                    }\n                                    <StyledInput\n                                        cursor=\"hand\"\n                                        textTransform=\"uppercase\"\n                                        color=\"#fff\" weight=\"400\"\n                                        size=\"0.8em\" spacing=\"0.2em\"\n                                        value={loading ? loading : \"Verify Alias\"}\n                                    />\n                                </Button>\n                            </Item>\n                        </>\n                    )\n                }\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n//import { parseEther, bigNumber } from 'ethers/utils'\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channelById(channelID)\n        .then(response => {\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity, channel) => {\n    const enableLogs = 0;\n\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      if(!identity){\n        reject(\"There is no identity file for channel:\",channel);\n      }\n      const ids = identity?.split(\"+\") || []; // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response, channel))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      // EPNSCoreHelper.getUserInfo(user, contract)\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.isUserSubscribed(channel, user)\n        .then(response => {\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nexport default  {\n    etherscanToken: process.env.REACT_APP_INFURA_API_KEY || \"\"\n}","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\n\nfunction NotificationToast({ notification, clearToast }) {\n\n  // toast customize\n  const LoaderToast = ({color }) => (\n      <Toaster>\n      <div>{notification.notificationTitle}</div>\n      <div>{notification.notificationBody}</div>\n      </Toaster>\n  )\n \n  // Render\n  return (\n    <NotificationWrapper>{\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n    }\n    </NotificationWrapper>\n  );\n}\n\nconst NotificationWrapper = styled.div`\n  display: none;\n`;\n\nconst Toaster = styled.div`\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n\n\n// Export Default\nexport default NotificationToast;\n","import axios from \"axios\";\n\n// const BASE_URL = \"https://backend-staging.epns.io/apis\";\nconst BASE_URL = \"https://backend-prod.epns.io/apis\";\n// const BASE_URL = \"https://backend-kovan.epns.io/apis\";\n// const BASE_URL = \"http://localhost:4000/apis\"; //for local push node\n\n/**\n * A function used to make get requests throughout the entire application\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @returns {Promise}\n */\nexport const getReq = async (path) => {\n    try {\n      const response = await axios.get(BASE_URL + path);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n/**\n * A function used to make post requests to the backend\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @param {Object} obj \n * @returns {Promise}\n */\nexport const postReq = async (path, obj) => {\n  try {\n    const response = await axios.post(BASE_URL + path, obj, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from 'api';\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n    ADD_CHANNEL_ANY: \"AddChannelAny\",\n    ADD_CHANNEL_SELF: \"AddChannelSelf\",\n    UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n    UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n    SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n    SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n    UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n    UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n}\n\nexport default class ChannelsDataStore {\n    static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n    state = {\n      channelsCount: -1,\n      channelsMeta: {},\n      channelsJson: {},\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n      epnsCommReadProvider: null\n    }\n\n    // init\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetChannelsListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\n      this.initChannelsListenersAsync();\n\n      // next get store channels count\n      this.getChannelsCountAsync();\n    }\n\n    // RESET LISTENERS\n    resetChannelsListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n      }\n    }\n\n    // init LISTENERS\n    initChannelsListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForAddChannelAnyAsync();\n      await this.listenForAddChannelSelfAsync();\n\n      await this.listenForUpdateChannelAnyAsync();\n      await this.listenForUpdateChannelSelfAsync();\n\n      // use the communicator contract for the below\n      await this.listenForSubscribeAnyAsync();\n      await this.listenForSubscribeSelfAsync();\n      await this.listenForUnsubscribeAnyAsync();\n      await this.listenForUnsubscribeSelfAsync();\n    }\n\n    // 1. Add Any Channel Listeners\n    listenForAddChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        await this.incrementChannelsCountAsync(1);\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 2. Add Self Channel Listener\n    listenForAddChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        // Nothing to do, just do callback\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 3. Update Any Channel Listener\n    listenForUpdateChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 4. Update Self Channel Listener\n    listenForUpdateChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 5. Subscriber Any\n    listenForSubscribeAnyAsync = async () => {\n      const contract = this.state.epnsCommReadProvider;\n      let filter = contract.filters.Subscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n      //   // Do own stuff\n      //   if (this.state.channelsMeta[channel]) {\n      //     const channelID = this.state.channelsMeta[channel];\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //     count = count + 1;\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      //   }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 6. Subscriber Self\n    listenForSubscribeSelfAsync = async () => {\n      const contract = this.state.epnsCommReadProvider;\n      let filter = contract.filters.Subscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 7. Unsubscribe Any\n    listenForUnsubscribeAnyAsync = async () => {\n      const contract = this.state.epnsCommReadProvider;\n      let filter = contract.filters.Unsubscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        // if (this.state.channelsMeta[channel]) {\n        //   const channelID = this.state.channelsMeta[channel];\n        //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n        //   count = count - 1;\n        //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        // }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 8. Unsubscribe Self\n    listenForUnsubscribeSelfAsync = async () => {\n      const contract = this.state.epnsCommReadProvider;\n      let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // CHANNELS COUNT\n    getChannelsCountAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfChannels(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.channelsCount = response;\n\n              if (enableLogs) console.log(\"getChannelsCountAsync() --> %o\", response);\n              resolve(this.state.channelsCount)\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n        else {\n          resolve(this.state.channelsCount);\n        }\n      });\n    }\n\n    incrementChannelsCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getChannelsCountAsync()\n          .then(response => {\n            this.state.channelsCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.channelsCount);\n            resolve(this.state.channelsCount)\n          })\n          .catch(err => { console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err); reject(err); });\n      });\n\n    }\n\n    // CHANNELS META FUNCTIONS\n    // To get channels meta\n    // get channels meta in a paginated format\n    // by passing in the starting index and the number of items per page\n    getChannelsMetaAsync = async (startIndex, pageCount) => {\n      return new Promise (async (resolve, reject) => {\n        // get total number of channels\n        const channelsCount = await this.getChannelsCountAsync();\n        let stopIndex = startIndex + pageCount;\n\n        // if the stop index is -1 then get all channels\n        if (stopIndex == -1 || stopIndex > channelsCount) {\n          stopIndex = channelsCount;\n        }\n\n        // initialise an array with the values from 0 to the length of the number of channels\n        let channelIDs = [];\n\n        for(let i = startIndex; i < stopIndex ; i++){\n          channelIDs.push(i)\n        }\n        console.log({channelIDs});\n\n        const promises = channelIDs.map(async (channelID) => {\n          // Match the cache\n          return this.getChannelMetaAsync(channelID)\n            .then(response => response )\n            .catch(err => console.log(\"!!!Error (but skipping), getChannelMetaAsync() --> %o\", err))\n        });\n\n        // wait until all promises are resolved\n        const channelMetaData = await Promise.all(promises);\n\n        // return channels meta\n        // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\n        resolve(channelMetaData);\n      });\n    }\n\n    // To get a single channel meta via id\n    getChannelMetaAsync = async (channelID) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelID]) {\n          console.log(\"getChannelMetaAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          let channelAddress;    \n\n          await EPNSCoreHelper.getChannelAddressFromID(channelID, this.state.epnsReadProvider)\n            .then(async response => {\n              channelAddress = response;\n              await this.getChannelMetaViaAddressAsync(channelAddress)\n                .then(response => {\n                  // update the channel cache before resolving\n                  this.state.channelsMeta[channelID] = response;\n                  this.state.channelsMeta[channelAddress] = channelID;\n\n                  // resolve\n                  // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                  resolve(response);\n                })\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // To get a single channel meta via address\n    getChannelMetaViaAddressAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelAddress]) {\n          const channelID = this.state.channelsMeta[channelAddress];\n\n          console.log(\"getChannelMetaViaAddressAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          // Can't cache this :(, no way to know channel id\n          await EPNSCoreHelper.getChannelInfo(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // resolve\n              // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaViaAddressAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    getChannelSubscribers = async (channelAddress) => {\n      return postReq(\"/channels/get_subscribers\", { channel: channelAddress, op: 'read' })\n        .then(({ data }) => data.subscribers)\n        .catch((err) => {\n          console.log(`getChannelSubscribers => ${err.message}`);\n          return []\n        });\n    };\n\n    // CHANNELS INFO FUNCTIONS\n    // To get a single channel meta via id\n    getChannelJsonAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsJson[channelAddress]) {\n          // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n          resolve(this.state.channelsJson[channelAddress]);\n        }\n        else {\n          await EPNSCoreHelper.getChannelJsonFromChannelAddress(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // First set the cache\n              this.state.channelsJson[channelAddress] = response;\n\n              // resolve\n              // console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n}\n","import React from \"react\";\nimport { api, utils, NotificationItem } from \"@epnsproject/frontend-sdk\";\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner'\nimport { Waypoint } from \"react-waypoint\";\n\nimport {ALLOWED_CORE_NETWORK} from 'pages/Home'\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\n\nimport NotificationToast from \"components/NotificationToast\";\n\n// Create Header\nfunction Feedbox() {\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null);\n  const { account, library, chainId } = useWeb3React();\n\n  const [notifications, setNotifications] = React.useState([]);\n  // since we dont have how many notifications there are in total\n  // we use this field to note when there are no more notifications to load\n  const [finishedFetching, setFinishedFetching] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [toast, showToast] = React.useState(null);\n\n  const [currentPage, setCurrentPage] = React.useState(1);\n  //define query\n  const notificationsPerPage = 6;\n\n  React.useEffect(() => {\n    const signer = library.getSigner(account);\n    // define the epns comms contracts\n    const ethCommsContract = new ethers.Contract(addresses.epnsEthComm, abis.epnsComm, signer);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const communicatorContract = chainId === ALLOWED_CORE_NETWORK ? ethCommsContract : polygonCommsContract;\n    // define the epns comms contracts\n    setEpnsReadProvider(communicatorContract);\n  }, [chainId]);\n  \n  const loadNotifications = async (currentPage:any) => {\n    setLoading(true);\n    try{\n      const {count, results} = await api.fetchNotifications(account, notificationsPerPage, currentPage);\n      const parsedResponse = utils.parseApiResponse(results);\n      setNotifications((oldNotifications) => ([\n        ...oldNotifications,\n        ...parsedResponse,\n      ]));\n      if(count === 0){\n        setFinishedFetching(true);\n      }\n    }catch(err){\n      console.log(err)\n    } finally{\n      setLoading(false);\n    }\n  }\n\n  const clearToast = () => showToast(null);\n\n  React.useEffect(() => {\n    if (epnsReadProvider) {\n      loadNotifications(currentPage);\n      return subscribe()\n    }\n  }, [epnsReadProvider]);\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast()\n    }\n  }, [toast]);\n\n  //function to query more notifications\n  const handlePagination = async() => {\n    setCurrentPage((prevPage) => {\n      const newPage = prevPage + 1;\n      loadNotifications(newPage);\n      return newPage;\n    });\n  };\n  \n  const subscribe = () => {\n    if (account) {\n      return newNotification(onReceive);\n    }\n  };\n\n  //handle new notification\n  const onReceive = async notification => {\n    showToast(notification);\n    setNotifications(existingNotifications => [notification, ...existingNotifications]);\n    // setNotifications(notifications => [notification].concat(notifications));\n  };\n\n  //subscribe to SendNotification\n  const newNotification = (fn) => {\n    const event = 'SendNotification'\n\n    //callback function for listener\n    const cb = async (\n      eventChannelAddress: string,\n      eventUserAddress: string,\n      identityHex: string\n    ) => {\n      const userAddress = account\n      const identity = hex2ascii(identityHex)\n      const notificationId = identity\n        .concat('+')\n        .concat(eventChannelAddress)\n        .concat('+')\n        .concat(eventUserAddress)\n        .toLocaleLowerCase()\n      const ipfsId = identity.split('+')[1];\n\n      const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(eventChannelAddress);\n\n      // Form Gateway URL\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\n      fetch(url)\n        .then(result => result.json())\n        .then(result => {\n      const ipfsNotification = {...result}\n      const notification = {\n        id: notificationId,\n        userAddress: eventUserAddress,\n        channelAddress: eventChannelAddress,\n        indexTimeStamp: Date.now() / 1000, // todo\n        notificationTitle: ipfsNotification.notification.title || channelJson.name,\n        notificationBody: ipfsNotification.notification.body,\n        // ...ipfsNotification.data,\n      }\n      if (ipfsNotification.data.type === '1') {\n        const isSubscribed = \n        epnsReadProvider.memberExists(\n          userAddress,\n          eventChannelAddress\n        )\n        .then(isSubscribed => {\n          if (isSubscribed) {\n            fn(notification)\n          }\n        })\n      } else if (userAddress === eventUserAddress) {\n        fn(notification)\n      }\n      })\n      .catch(err => {\n        console.log(\"!!!Error, getting new notification data from ipfs --> %o\", err);\n      });\n    }\n    epnsReadProvider.on(event, cb)\n    return epnsReadProvider.off.bind(epnsReadProvider, event, cb)\n  }\n\n  const showWayPoint = (index) => {\n    return (Number(index) === notifications.length - 1) && !finishedFetching;\n  }\n\n  // Render\n  return (\n    <>\n      <Container>\n        {notifications &&\n          <Items id=\"scrollstyle-secondary\">\n            {notifications.map((oneNotification, index) => {\n              const { cta, title, message, app, icon, image} = oneNotification;\n\n              // render the notification item\n              return (\n                <>\n                  {showWayPoint(index) && (<Waypoint onEnter = { () => handlePagination()}/>)}\n                  <NotificationItem\n                    notificationTitle={title}\n                    notificationBody={message}\n                    cta={cta}\n                    app={app}\n                    icon={icon}\n                    image={image}\n                  />\n                </>\n              );\n            })}\n          </Items>\n        }\n        {(loading) && \n          <Loader\n          type=\"Oval\"\n          color=\"#35c5f3\"\n          height={40}\n          width={40}\n        />\n        }\n      \n        {\n        toast && \n        <NotificationToast\n          notification={toast}\n          clearToast = {clearToast}\n          />\n        }\n      </Container>\n    </>\n  );\n}\n\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n// css styles\nconst Container = styled.div`\ndisplay: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  max-height: 100vh;\n\n  // padding: 20px;\n  // font-size: 16px;\n  // display: flex;\n  // font-weight: 200;\n  // align-content: center;\n  // align-items: center;\n  // justify-content: center;\n  // width: 100%;\n  // min-height: 40vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\n// Export Default\nexport default Feedbox;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction DisplayNotice({ title, theme }) {\n  React.useEffect(() => {\n\n  }, [title, theme]);\n\n  // to create blockies\n\n  return (\n    <Container>\n      <AnimateOnChange\n        animationIn=\"fadeIn\"\n        animationOut=\"fadeOut\"\n        durationOut={200}\n      >\n        <Notice theme={theme}>{title}</Notice>\n      </AnimateOnChange>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 400;\n\n  ${props => props.theme === 'primary' && css`\n    background: #e20880;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f3;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f;\n  `};\n`\n\n// Export Default\nexport default DisplayNotice;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const Device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { Device } from 'assets/Device';\nimport { recoverTypedSignature_v4 as recoverTypedSignatureV4 } from \"eth-sig-util\"\n\nimport { ToastContainer, toast as toaster  } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\nimport Skeleton from '@yisheng90/react-loading';\nimport { IoMdPeople } from 'react-icons/io';\nimport { GiTwoCoins } from 'react-icons/gi';\nimport { GoVerified } from 'react-icons/go';\n \nimport { useWeb3React } from '@web3-react/core';\n//import { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\nimport NotificationToast from \"components/NotificationToast\";\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { ALLOWED_CORE_NETWORK } from 'pages/Home';\nimport { postReq } from \"api\";\n// const VERIFYING_CONTRACT = \"0xc882da9660d29c084345083922f8a9292e58787d\";\nconst UNVERIFIED_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\n// Create Header\nfunction ViewChannelItem({ channelObject, isOwner, epnsReadProvider, epnsCommWriteProvider, epnsWriteProvide, epnsCommReadProvider }) {\n  const { account, library, chainId } = useWeb3React();\n  const EPNS_DOMAIN = {\n    name: 'EPNS',\n    version: '1.0.0',\n    chainId: chainId,\n    verifyingContract: epnsCommReadProvider.address ,\n  }\n\n  const [ channelJson, setChannelJson ] = React.useState({});\n  const [ subscribed, setSubscribed ] = React.useState(true);\n  const [ loading, setLoading ] = React.useState(true);\n  const [ memberCount, setMemberCount ] = React.useState(0);\n  const [ isPushAdmin, setIsPushAdmin ] = React.useState(false);\n  const [ isVerified, setIsVerified ] = React.useState(false);\n  const [ isBlocked, setIsBlocked] = React.useState(false)\n  const [ vLoading, setvLoading ] = React.useState(false);\n  const [ bLoading, setBLoading ] = React.useState(false);\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\n  // toast related section\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n  const showNetworkToast = () => {\n    showToast({\n      notificationTitle: <span style={{color: \"#e20880\"}}> Invalid Network </span>,\n      notificationBody: \"Please connect to the Kovan network to opt-in/opt-out of channels\"\n    });\n  }\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast()\n    }\n  }, [toast]);\n  // toast related section\n\n\n  React.useEffect(() => {\n    fetchChannelJson();\n    setIsBlocked(\n      channelObject.channelState === 3 || //dont display channel if blocked\n      channelObject.channelState === 2 //dont display channel if deactivated\n    );\n  }, [account, channelObject, chainId]);\n\n  // to fetch channels\n  const fetchChannelJson = async () => {\n    const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(channelObject.addr);\n    const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(channelObject.addr);\n    const subscribed = channelSubscribers.find(sub => {\n      return sub.toLowerCase() === account.toLowerCase();\n    });\n    // check if is push admin\n    const channelAdmin = await epnsReadProvider.pushChannelAdmin();\n    setIsPushAdmin(channelAdmin === account);\n    setMemberCount(channelSubscribers.length);\n    setSubscribed(subscribed);\n    const channelVerifiedStatus = await epnsReadProvider.getChannelVerfication( channelObject.addr);\n    setIsVerified(Boolean(channelVerifiedStatus));\n    setChannelJson(channelJson);\n\n    setLoading(false);\n  }\n\n    // toast customize\n    const LoaderToast = ({ msg, color }) => (\n      <Toaster>\n        <Loader\n         type=\"Oval\"\n         color={color}\n         height={30}\n         width={30}\n        />\n        <ToasterMsg>{msg}</ToasterMsg>\n      </Toaster>\n    )\n  \n  // to subscribe\n  const subscribe = async () => {\n    subscribeAction(false);\n  }\n\n  // Toastify\n  let notificationToast = () => toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\"/>, {\n    position: \"bottom-right\",\n    autoClose: false,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\n  const verifyChannel = () => {\n    setvLoading(true);\n    // post op\n    epnsWriteProvide.verifyChannel(channelObject.addr)\n    .then(async (tx) => {\n      console.log(tx);\n      console.log (\"Transaction Sent!\");\n\n      toaster.update(notificationToast(), {\n        render: \"Transaction sending\",\n        type: toaster.TYPE.INFO,\n        autoClose: 5000\n      });\n\n      await tx.wait(1);\n      console.log (\"Transaction Mined!\");\n      setIsVerified(true);\n    })\n    .catch((err) => {\n      console.log(\"!!!Error verifyChannel() --> %o\", err);\n      toaster.update(notificationToast(), {\n        render: \"Transacion Failed: \" + err.error.message,\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000\n      });\n    })\n    .finally(() => {\n      setvLoading(false);\n    })\n  }\n\n  const unverifyChannel = () => {\n    setvLoading(true);\n    epnsWriteProvide.unverifyChannel(channelObject.addr)\n    .then(async (tx) => {\n      console.log(tx);\n      console.log (\"Transaction Sent!\");\n\n      toaster.update(notificationToast(), {\n        render: \"Transaction Sending\",\n        type: toaster.TYPE.INFO,\n        autoClose: 5000\n      });\n\n      await tx.wait(1);\n      console.log (\"Transaction Mined!\");\n      setIsVerified(false);\n    })\n    .catch((err) => {\n      console.log(\"!!!Error handleSendMessage() --> %o\", err);\n      toaster.update(notificationToast(), {\n        render: \"Transacion Failed: \" + err.error.message,\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000\n      });\n    })\n    setvLoading(false);\n  }\n  const blockChannel = () => {\n    setBLoading(true);\n    epnsWriteProvide.blockChannel(channelObject.addr)\n    .then(async (tx) => {\n      console.log(tx);\n      console.log (\"Transaction Sent!\");\n\n      toaster.update(notificationToast(), {\n        render: \"Transaction Sent\",\n        type: toaster.TYPE.INFO,\n        autoClose: 5000\n      });\n\n      await tx.wait(1);\n      console.log (\"Transaction Mined!\");\n    })\n    .catch((err) => {\n      console.log(\"!!!Error handleSendMessage() --> %o\", err);\n      toaster.update(notificationToast(), {\n        render: \"Transacion Failed: \" + err.error.message,\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000\n      });\n    })\n    .finally(()=>{\n      // post op\n      setBLoading(false);\n      setIsBlocked(true);\n    })\n  }\n\n  const subscribeAction = async () => {\n    setTxInProgress(true);\n    const type = {\n      Subscribe: [\n        { name: \"channel\", type: \"address\" },\n        { name: \"subscriber\", type: \"address\" },\n        { name: \"action\", type: \"string\" }\n      ],\n    };\n    const message = {\n        channel: channelObject.addr,\n        subscriber: account,\n        action: \"Subscribe\"\n    }\n\n    const signature = await library.getSigner(account)._signTypedData(\n      EPNS_DOMAIN,\n      type,\n      message\n    );\n\n    let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    postReq('/channels/subscribe_offchain', {\n      signature,\n      message,\n      op: \"write\",\n      chainId,\n      contractAddress: epnsCommReadProvider.address \n    }).then((res) => {\n      setSubscribed(true);\n      setMemberCount(memberCount + 1);\n      toaster.update(txToast, {\n        render: \"Sucesfully opted into channel !\",\n        type: toaster.TYPE.SUCCESS,\n        autoClose: 5000\n      });\n      console.log(res);\n    }).catch(err => {\n      toaster.update(txToast, {\n        render: \"There was an error opting into channel (\" + err.message + \")\",\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000\n      });\n      console.log(err);\n    }).finally(() => {\n      setTxInProgress(false);\n    })\n  }\n\n  const unsubscribeAction = async () => {\n    if(!onCoreNetwork){\n      return showNetworkToast();\n    }\n    const type = {\n      Unsubscribe: [\n        { name: \"channel\", type: \"address\" },\n        { name: \"unsubscriber\", type: \"address\" },\n        { name: \"action\", type: \"string\" }\n      ],\n    };\n    const message = {\n      channel: channelObject.addr,\n      unsubscriber: account,\n      action: \"Unsubscribe\"\n    }\n    const signature = await library.getSigner(account)._signTypedData(\n      EPNS_DOMAIN,\n      type,\n      message\n    );\n\n    let txToast = toaster.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    postReq('/channels/unsubscribe_offchain', {\n      signature,\n      message,\n      op: \"write\",\n      chainId,\n      contractAddress: epnsCommReadProvider.address \n    }).then((res) => {\n      setSubscribed(false);\n      setMemberCount(memberCount + 1);\n      toaster.update(txToast, {\n        render: \"Sucesfully opted out of channel !\",\n        type: toaster.TYPE.SUCCESS,\n        autoClose: 5000\n      });\n      console.log(res);\n    }).catch(err => {\n      toaster.update(txToast, {\n        render: \"There was an error opting into channel (\" + err.message + \")\",\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000\n      });\n      console.log(err);\n    }).finally(() => {\n      setTxInProgress(false);\n    })\n  }\n\n  if(isBlocked) return <></>\n\n\n  // render\n  return (\n    <Container key={channelObject.addr}>\n      <ChannelLogo>\n        <ChannelLogoOuter>\n          <ChannelLogoInner>\n          {loading &&\n            <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\n          }\n          {!loading &&\n            <ChannelLogoImg src={`${channelJson.icon}`} />\n          }\n          </ChannelLogoInner>\n        </ChannelLogoOuter>\n      </ChannelLogo>\n\n      <ChannelInfo>\n        <ChannelTitle>\n          {loading &&\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n          }\n          {!loading &&\n            <ChannelTitleLink href={channelJson.url} target=\"_blank\" rel=\"nofollow\">{channelJson.name}</ChannelTitleLink>\n          }\n        </ChannelTitle>\n\n        <ChannelDesc>\n          {loading &&\n            <>\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n              </SkeletonWrapper>\n            </>\n          }\n          {!loading &&\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\n          }\n        </ChannelDesc>\n\n        <ChannelMeta>\n          {loading &&\n            <>\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\n                <Skeleton />\n              </SkeletonWrapper>\n            </>\n          }\n          {!loading &&\n            <>\n              <Subscribers>\n                <IoMdPeople size={20} color=\"#ccc\"/>\n                <SubscribersCount>\n                  {memberCount}\n                </SubscribersCount>\n              </Subscribers>\n              <Pool>\n                <GiTwoCoins size={20} color=\"#ccc\"/>\n                <PoolShare>\n                  {EPNSCoreHelper.formatBigNumberToMetric(channelObject.poolContribution, true) + \" DAI\"}\n                </PoolShare>\n              </Pool>\n              {\n                isVerified && (\n                  <Subscribers>\n                    <GoVerified size={18} color=\"#35c4f3\"/>\n                    {/* <SubscribersCount>\n                      verified\n                    </SubscribersCount> */}\n                  </Subscribers>\n                )\n              }\n            </>\n          }\n        </ChannelMeta>\n      </ChannelInfo>\n      {!!account && !!library &&\n        <>\n          <LineBreak />\n          <ChannelActions>\n            {loading &&\n              <SkeletonButton>\n                <Skeleton />\n              </SkeletonButton>\n            }\n            {!loading && isPushAdmin && (\n              <SubscribeButton onClick={blockChannel} disabled={bLoading}>\n                {bLoading &&\n                  <ActionLoader>\n                    <Loader\n                     type=\"Oval\"\n                     color=\"#FFF\"\n                     height={16}\n                     width={16}\n                    />\n                  </ActionLoader>\n                }\n                <ActionTitle hideit={bLoading}>Block channel</ActionTitle>\n              </SubscribeButton>\n            )\n            }\n            {!loading && isPushAdmin && !isVerified && (\n              <SubscribeButton onClick={verifyChannel} disabled={vLoading}>\n                {vLoading &&\n                  <ActionLoader>\n                    <Loader\n                     type=\"Oval\"\n                     color=\"#FFF\"\n                     height={16}\n                     width={16}\n                    />\n                  </ActionLoader>\n                }\n                <ActionTitle hideit={vLoading}>Verify Channel</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && isPushAdmin && isVerified && (\n              <UnsubscribeButton onClick={unverifyChannel} disabled={vLoading}>\n              {vLoading &&\n                <ActionLoader>\n                  <Loader\n                   type=\"Oval\"\n                   color=\"#FFF\"\n                   height={16}\n                   width={16}\n                  />\n                </ActionLoader>\n              }\n              <ActionTitle hideit={vLoading}>Unverify Channel</ActionTitle>\n            </UnsubscribeButton>\n            ) }\n            {!loading && !subscribed &&\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\n                {txInProgress &&\n                  <ActionLoader>\n                    <Loader\n                     type=\"Oval\"\n                     color=\"#FFF\"\n                     height={16}\n                     width={16}\n                    />\n                  </ActionLoader>\n                }\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\n              </SubscribeButton>\n            }\n            {!loading && subscribed &&\n              <>\n              {isOwner &&\n                <OwnerButton disabled>Owner</OwnerButton>\n              }\n              {!isOwner &&\n                <UnsubscribeButton onClick={unsubscribeAction} disabled={txInProgress}>\n                  {txInProgress &&\n                    <ActionLoader>\n                      <Loader\n                       type=\"Oval\"\n                       color=\"#FFF\"\n                       height={16}\n                       width={16}\n                      />\n                    </ActionLoader>\n                  }\n                  <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\n                </UnsubscribeButton>\n              }\n              </>\n            }\n          </ChannelActions>\n        </>\n      }\n      { toast && \n        <NotificationToast\n          notification={toast}\n          clearToast = {clearToast}\n        />\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${props => props.atW + '%' || '100%'};\n  height: ${props => props.atH}px;\n  border-radius: ${props => props.borderRadius || 10}px;\n  margin-bottom: ${props => props.marginBottom || 5}px;\n  margin-right: ${props => props.marginRight || 0}px;\n`\n\nconst ChannelLogo = styled.div`\n  max-width: 100px;\n  min-width: 32px;\n  flex: 1;\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n`\n\nconst ChannelLogoOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`\n\nconst ChannelLogoInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelLogoImg = styled.img`\n  object-fit: contain;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n`\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`\n\nconst Subscribers = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst SubscribersCount = styled(ChannelMetaBox)`\n  background: #35c4f3;\n`\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  // max-width: 250px;\n  display: flex;\n  justify-content: flex-end;\n  // justify-content: center;\n  align-items: center;\n`\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst ActionTitle = styled.span`\n  ${ props => props.hideit && css`\n    visibility: hidden;\n  `};\n`\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n`\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #674c9f;\n`\n\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\n// Export Default\nexport default ViewChannelItem;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\n\nimport { FaGasPump } from 'react-icons/fa';\n\n// Faucet URLs\nfunction Faucets() {\n  // render\n  return (\n    <Section margin=\"5px 0px 0px 0px\">\n      <Content>\n        <ItemH\n          self=\"flex-end\"\n          bg=\"#fff\"\n          radius=\"8px\"\n          padding=\"30px 10px 10px 10px\"\n          border=\"1px solid #ededed\"\n          overflow=\"hidden\"\n          align=\"stretch\"\n        >\n          <Span\n            pos=\"absolute\"\n            top=\"10px\"\n            right=\"0px\"\n            padding=\"5px 10px\"\n            bg=\"#e20880\"\n            color=\"#fff\"\n            size=\"12px\"\n            weight=\"600\"\n          >\n            Get Free Kovan Ether\n          </Span>\n\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://faucet.metamask.io/\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Metamask Faucet\n              </Span>\n            </Anchor>\n          </Item>\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://gitter.im/kovan-testnet/faucet\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Faucet Kovan\n              </Span>\n            </Anchor>\n          </Item>\n\n        </ItemH>\n      </Content>\n    </Section>\n  );\n}\n\n// Export Default\nexport default Faucets;\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n      epnsCommReadProvider: null\n    }\n\n    // init\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      // TODO use the right contract comms\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Subscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n        // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.publicKeyRegistered = true;\n      // }\n\n      // contract.once(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              reject(err);\n          });\n        }\n      });\n    }\n\n}\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\nimport { Waypoint } from \"react-waypoint\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewChannelItem from \"components/ViewChannelItem\";\nimport Faucets from \"components/Faucets\";\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n// Create Header\nfunction ViewChannels({ epnsReadProvider, epnsWriteProvide, epnsCommReadProvider, epnsCommWriteProvider }) {\n  const { account, library, chainId } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n  const [moreLoading, setMoreLoading] = React.useState(false);\n  const [channels, setChannels] = React.useState([]);\n  const [totalChannelLength, setChannelLength] = React.useState(0);\n  const [paginatedChannels, setPaginatedChannels] = React.useState([]);\n  const [user, setUser] = React.useState(null);\n  const [owner, setOwner] = React.useState(null);\n\n  const [page, setPage] = React.useState(0);\n  const channelsPerPage = 10;\n  const channelsVisited = page * channelsPerPage;\n\n  React.useEffect(() => {\n    setChannels([]);\n    fetchInitialsChannelMeta();\n  }, [account, chainId]);\n\n\n  //update paginatedChannels array when scrolled till the end\n  React.useEffect(() => {\n    if(channels){\n      setPaginatedChannels(prev => [...prev, ...channels.slice(channelsVisited, channelsVisited + channelsPerPage)])\n      // setPaginatedChannels(channels)\n    }\n  }, [channels, page]);\n\n\n  // to update a page\n  const updateCurrentPage = () => {\n    if(loading || moreLoading) return;\n    // fetch more channel information\n    setMoreLoading(true);\n    setPage((prev) => {\n      const newPage = prev + 1;\n      loadMoreChannelMeta(newPage);\n      return newPage;\n    });\n  }\n\n  // to fetch channels\n  const fetchInitialsChannelMeta = async () => {\n    // get and set user and owner first\n    const userMeta = await UsersDataStore.instance.getUserMetaAsync();\n    setUser(userMeta);\n    \n    const ownerAddr = await UsersDataStore.instance.getOwnerMetaAsync();\n    setOwner(ownerAddr);\n\n    // const channelsMeta = await EPNSCoreHelper.getChannelsMetaLatestToOldest(-1, -1, epnsReadProvider);\n    const channelsMeta = await ChannelsDataStore.instance.getChannelsMetaAsync(channelsVisited, channelsPerPage);\n    const totalChannelsLength = await ChannelsDataStore.instance.getChannelsCountAsync();\n    setChannelLength(totalChannelsLength)\n    // Filter out channel\n\n    setChannels(channelsMeta);\n    setLoading(false);\n  }\n\n  // load more channels when we get to the bottom of the page\n  const loadMoreChannelMeta = async (newPageNumber) => {\n    const startingPoint = newPageNumber * channelsPerPage;\n    // console.log({startingPoint, channelsPerPage})\n    const moreChannels = await ChannelsDataStore.instance.getChannelsMetaAsync(startingPoint, channelsPerPage);\n    setChannels(oldChannels => ([\n      ...oldChannels,\n      ...moreChannels\n    ]));\n    setMoreLoading(false)\n  }\n\n  // conditionally display the waymore bar which loads more information\n  const showWayPoint = (index) => {\n    return ( Number(index) === paginatedChannels.length -1 )\n  }\n\n  return (\n    <>\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && channels.length == 0 &&\n        <ContainerInfo>\n          <DisplayNotice\n            title=\"That's weird, No Channels in EPNS... world is ending... right?\"\n            theme=\"primary\"\n          />\n        </ContainerInfo>\n      }\n      {!loading && controlAt == 0 && channels.length != 0 &&\n        <Items id=\"scrollstyle-secondary\">\n          <Faucets/>\n\n          {Object.keys(paginatedChannels.filter(Boolean)).map(index => {\n            const isOwner = (\n              paginatedChannels[index].addr === account ||\n              (account === owner && paginatedChannels[index].addr === \"0x0000000000000000000000000000000000000000\")\n            );\n\n            if (paginatedChannels[index].addr !== \"0x0000000000000000000000000000000000000000\") {\n              return (\n                <>\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\n                <div\n                  key={paginatedChannels[index].addr}\n                >\n                  <ViewChannelItem\n                    channelObject={paginatedChannels[index]}\n                    isOwner={isOwner}\n                    epnsReadProvider={epnsReadProvider}\n                    epnsWriteProvide={epnsWriteProvide}\n                    epnsCommReadProvider={epnsCommReadProvider}\n                    epnsCommWriteProvider={epnsCommWriteProvider}\n                  />\n                </div>\n                </>\n              );\n            }\n            else if (paginatedChannels[index].addr === \"0x0000000000000000000000000000000000000000\" && user.channellized) {\n              return (\n                <>\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\n                <div\n                  key={paginatedChannels[index].addr}\n                >\n                  <ViewChannelItem\n                    channelObject={paginatedChannels[index]}\n                    isOwner={isOwner}\n                    epnsReadProvider={epnsReadProvider}\n                    epnsWriteProvide={epnsWriteProvide}\n                    epnsCommReadProvider={epnsCommReadProvider}\n                    epnsCommWriteProvider={epnsCommWriteProvider}\n                  />\n                </div>\n                </>\n              );\n            }\n            else {\n              return(\n                <>\n                {showWayPoint(index) && (<Waypoint onEnter = {updateCurrentPage}/>)}\n                </>\n              )\n            }\n          })}\n          {moreLoading && channels.length &&\n            <CenterContainer>\n              <Loader\n              type=\"Oval\"\n              color=\"#35c5f3\"\n              height={40}\n              width={40}\n              />\n            </CenterContainer>\n          }\n        </Items>\n      }\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\nconst CenterContainer = styled(ContainerInfo)`\n  width: fit-content;\n  margin: auto;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n// Export Default\nexport default ViewChannels;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport { useWeb3React } from '@web3-react/core';\n\n\n// Other Information URLs\nfunction ViewInfoItem() {\n  // render\n  return (\n    <>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (iOS)\n            </AppLink>\n          </AppLinkText>\n           For iOS Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (Android)\n            </AppLink>\n          </AppLinkText>\n           For Android Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <ChannelTitleLink href= \"#\" target=\"_blank\" rel=\"nofollow\">\n            Click here for our How to Guides\n          </ChannelTitleLink>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  // display: flex;\n  // flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLinkText = styled.div`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n`\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\n// Export Default\nexport default ViewInfoItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport ViewInfoItem from \"components/ViewInfoItem\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// Other Information section\nfunction Info() {\n  const { account, library } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  return (\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && \n      <>\n        <InfoBox>\n          <ViewInfoItem/>\n        </InfoBox>\n      </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\nconst InfoBox = styled.div`\n  padding: 10px 20px;\n  display: block;\n  align-self: stretch;\n  background: #fafafa;\n`\n\n\n// Export Default\nexport default Info;\n","import React from 'react'\n\nexport const CloseIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            </g>\n        </g>\n    </svg>\n);\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { BsFillImageFill } from 'react-icons/bs';\nimport { FiLink } from 'react-icons/fi';\n\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { CloseIcon } from 'assets/icons';\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport CryptoHelper from 'helpers/CryptoHelper';\nimport { ALLOWED_CORE_NETWORK as ETH_COMMUNICATOR_NETWORK } from 'pages/Home';\nconst ethers = require('ethers');\n\n\n// Set Notification Form Type | 0 is reserved for protocol storage\nconst NFTypes = [\n  { value: \"1\", label: 'Broadcast (IPFS Payload)' },\n  { value: \"2\", label: 'Secret (IPFS Payload)' },\n  { value: \"3\", label: 'Targetted (IPFS Payload)' },\n  { value: \"4\", label: 'Subset (IPFS Payload)' },\n];\nconst LIMITER_KEYS = ['Enter', ','];\nconst CHANNNEL_DEACTIVATED_STATE = 2;\nconst CHANNEL_BLOCKED_STATE = 3;\n\n// Create Header\nfunction SendNotifications({\n  epnsReadProvider, epnsWriteProvider, epnsCommReadProvider, epnsCommWriteProvider, channelAccount\n}) {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [nfProcessing, setNFProcessing] = React.useState(0);\n  const [channelState, setChannelState] = React.useState(1);\n\n  const isChannelDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\n  const isChannelBlocked = channelState === CHANNEL_BLOCKED_STATE;\n\n  const [nfRecipient, setNFRecipient] = React.useState('');\n  const [multipleRecipients, setMultipleRecipients] = React.useState([]);\n  const [tempRecipeint, setTempRecipient] = React.useState(''); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\n  const [nfType, setNFType] = React.useState('');\n\n  const [nfSub, setNFSub] = React.useState('');\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\n\n  const [nfMsg, setNFMsg] = React.useState('');\n\n  const [nfCTA, setNFCTA] = React.useState('');\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\n\n  const [nfMedia, setNFMedia] = React.useState('');\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\n\n  const [nfInfo, setNFInfo] = React.useState('');\n  const [loadingChannels, setLoadingChannels] = React.useState(false);\n\n  // fetch basic channel information\n  React.useEffect(() => {\n    setLoadingChannels(true);\n    epnsReadProvider.channels(channelAccount)\n    .then(res => {\n      setChannelState(res.channelState);\n    })\n    .finally(() => {\n      setLoadingChannels(false);\n    })\n  }, [account]);\n\n  // on change for the subset type notifications input\n  const handleSubsetInputChange = (e) => {\n    // if the user enters in a comma or an enter then seperate the addresses\n    if(LIMITER_KEYS.includes(e.key)){\n      e.preventDefault();\n      // if they enter a limiter key, then add the temp value to the recipeints list\n      // then clear the value of the temp text\n      setMultipleRecipients((oldRecipients) =>(\n        // use this combination to remove duplicates\n        Array.from(new Set([\n        ...oldRecipients,\n        tempRecipeint\n        ]))\n      ));\n      setTempRecipient('');\n    }\n  };\n  // when to remove a subscriber\n  const removeRecipient = (recipientAddress) => {\n    const filteredRecipients = multipleRecipients.filter(rec => rec !== recipientAddress);\n    setMultipleRecipients(filteredRecipients);\n  };\n\n  React.useEffect(() => {\n    const broadcastIds = [\"1\", \"4\"]; //id's of notifications which qualify as broadcast\n    setMultipleRecipients([]); //reset array when type changes/\n    if (broadcastIds.includes(nfType)) {\n      // This is broadcast, nfRecipient will be the same\n      setNFRecipient(account);\n    }\n    else {\n      setNFRecipient('');\n    }\n  }, [nfType]);\n\n  // validate the body being sent, return true if no errors\n  const bodyValidated = (notificationToast) => {\n    let validated = true;\n    // if we are sending for a subset and there \n    if(nfType === \"4\" && !multipleRecipients.length){\n      toast.update(notificationToast, {\n        render: \"Please enter at least two recipients in order to use subset notifications type\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000\n      });\n      validated = false; \n    }\n    return validated;\n  }\n\n  const handleSendMessage = async (e) => {\n    // Check everything in order\n    e.preventDefault();\n\n    // Toastify\n    let notificationToast = toast.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\"/>, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    // do some validation\n    if(!bodyValidated(notificationToast)) return;\n\n    // Set to processing\n    setNFProcessing(1);\n\n    // Form signer and contract connection\n    var signer = library.getSigner(account);\n    // define the core epns contract\n    let contract = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n    // define the epns comms contracts\n    const ethCommsContract = new ethers.Contract(addresses.epnsEthComm, abis.epnsComm, signer);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const communicatorContract = chainId === ETH_COMMUNICATOR_NETWORK ? ethCommsContract : polygonCommsContract;\n    // define the epns comms contracts\n\n    // For payload basic\n    let nsub = nfSub;\n    let nmsg = nfMsg;\n    let secretEncrypted;\n\n    let asub = nfSub;\n    let amsg = nfMsg;\n    let acta = nfCTA;\n    let aimg = nfMedia;\n\n    // Decide type and storage\n    switch (nfType) {\n      // Broadcast Notification\n      case \"1\":\n        break;\n\n      // Targetted Notification\n      case \"3\":\n        break;\n\n      // Secret Notification\n      case \"2\":\n        // Create secret\n        let secret = CryptoHelper.makeid(14);\n\n        // Encrypt payload and change sub and nfMsg in notification\n        nsub = \"You have a secret message!\";\n        nmsg = \"Open the app to see your secret message!\";\n\n        // get public key from EPNSCoreHelper\n        let k = await EPNSCoreHelper.getPublicKey(nfRecipient, contract);\n        if (k == null) {\n          // No public key, can't encrypt\n          setNFInfo(\"Public Key Registration is required for encryption!\");\n          setNFProcessing(2);\n\n          toast.update(notificationToast, {\n            render: \"Unable to encrypt for this user, no public key registered\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n\n          return;\n        }\n\n        let publickey = k.toString().substring(2);\n        //console.log(\"This is public Key: \" + publickey);\n\n        secretEncrypted = await CryptoHelper.encryptWithECIES(secret, publickey);\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\n        break;\n  \n      // Targetted Notification\n      case \"4\":\n        break;\n\n      default:\n        break;\n    }\n\n    // Handle Storage\n    let storagePointer = '';\n\n    // IPFS PAYLOAD --> 1, 2, 3\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\n      // Checks for optional fields\n      if (nfSubEnabled && isEmpty(nfSub)) {\n        setNFInfo(\"Enter Subject or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n\n        return;\n      }\n\n      if (nfMediaEnabled && isEmpty(nfMedia)) {\n        setNFInfo(\"Enter Media URL or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      if (isEmpty(nfMsg)) {\n        setNFInfo(\"Message cannot be empty\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      const jsonPayload = {\n        \"notification\": {\n          \"title\": nsub,\n          \"body\": nmsg\n        },\n        \"data\": {\n          \"type\": nfType,\n          \"secret\": secretEncrypted,\n          \"asub\": asub,\n          \"amsg\": amsg,\n          \"acta\": acta,\n          \"aimg\": aimg\n        }\n      };\n\n      // if we are sending a subset type, then include recipients\n      if(nfType === \"4\"){\n        jsonPayload[\"recipients\"] = [...multipleRecipients];\n      }\n\n      const input = JSON.stringify(jsonPayload);\n\n      console.log(\"Uploding to IPFS...\");\n      toast.update(notificationToast, {\n        render: \"Uploding to IPFS...\",\n      });\n\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n      try {\n        storagePointer = await ipfs.add(input);\n      }\n      catch (e) {\n        setNFProcessing(2);\n        setNFInfo(\"IPFS Upload Error\");\n      }\n\n      console.log (\"IPFS cid: %o\", storagePointer);\n      toast.update(notificationToast, {\n        render: \"IPFS HASH: \" + storagePointer,\n      });\n\n    }\n\n    // Prepare Identity and send notification\n    const identity = nfType + \"+\" + storagePointer;\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise;\n\n    anotherSendTxPromise = communicatorContract.sendNotification(account, nfRecipient, identityBytes);\n\n\n    console.log (\"Sending Transaction... \");\n    toast.update(notificationToast, {\n      render: \"Sending Transaction...\",\n    });\n\n    anotherSendTxPromise\n      .then(async (tx) => {\n        console.log(tx);\n        console.log (\"Transaction Sent!\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Sent\",\n          type: toast.TYPE.INFO,\n          autoClose: 5000\n        });\n\n        await tx.wait(1);\n        console.log (\"Transaction Mined!\");\n\n        setNFProcessing(2);\n        setNFType('');\n        setNFInfo(\"Notification Sent\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Mined / Notification Sent\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000\n        });\n      })\n      .catch(err => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        setNFInfo(\"Transaction Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Transacion Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n      });\n  }\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  if(loadingChannels) return <></>\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span weight=\"200\">Send </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Notification</Span>\n            </H2>\n            {\n              !isChannelDeactivated ? (\n                <H3>EPNS supports four types of notifications (for now!). <b>Groups</b>, <b>Secrets</b>, <b>Targetted</b> and <b>Subsets</b>.</H3>\n              ):(\n                <H3>This channel has been deactivated, please reactivate it!.</H3>\n              )\n            }\n          </Item>\n        </Content>\n      </Section>\n\n      {\n        !isChannelDeactivated && (\n          <Section>\n            <Content>\n              <Item align=\"stretch\">\n                <FormSubmision\n                  flex=\"1\"\n                  direction=\"column\"\n                  margin=\"0px\"\n                  justify=\"center\"\n                  size=\"1.1rem\"\n                  onSubmit={handleSendMessage}\n                >\n                  <Item margin =\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Item flex=\"5\" justify=\"flex-start\" align=\"stretch\" minWidth=\"280px\">\n                      <DropdownStyledParent>\n                        <DropdownStyled options={NFTypes} onChange={(option) => {setNFType(option.value); console.log(option)}} value={nfType} placeholder=\"Select Type of Notification to Send\" />\n                      </DropdownStyledParent>\n                    </Item>\n                    <Input display=\"none\" value={nfType} onChange={(e) => {setNFType(e.target.value)}} />\n\n                    {nfType &&\n                      <ItemH margin=\"0px 15px 15px 15px\" bg=\"#f1f1f1\" flex=\"1\" self=\"stretch\" justify=\"space-between\">\n                        <ItemH margin=\"15px 10px\" flex=\"inital\">\n                          <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Subject</Span>\n                          <Switch color=\"primary\" size=\"small\" checked={nfSubEnabled} onChange={() => setNFSubEnabled(!nfSubEnabled)} />\n                        </ItemH>\n\n                        <ItemH margin=\"15px 10px\" flex=\"inital\">\n                          <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Media</Span>\n                          <Switch color=\"primary\" size=\"small\" checked={nfMediaEnabled} onChange={() => setNFMediaEnabled(!nfMediaEnabled)} />\n                        </ItemH>\n\n                        <ItemH margin=\"15px 10px\" flex=\"inital\">\n                          <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable CTA</Span>\n                          <Switch color=\"primary\" size=\"small\" checked={nfCTAEnabled} onChange={() => setNFCTAEnabled(!nfCTAEnabled)} />\n                        </ItemH>\n                      </ItemH>\n                    }\n                  </Item>\n\n                  {!nfType &&\n                    <Item padding=\"0px 20px 30px 20px\" />\n                  }\n\n                  {(nfType === \"2\" || nfType === \"3\") &&\n                    <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Enter recipient wallet address\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={nfRecipient}\n                        onChange={(e) => {setNFRecipient(e.target.value)}}\n                      />\n                      {nfRecipient.trim().length == 0 &&\n                          <Span\n                            padding=\"4px 10px\"\n                            right=\"0px\"\n                            top=\"0px\"\n                            pos=\"absolute\"\n                            color=\"#fff\"\n                            bg=\"#000\"\n                            size=\"0.7rem\"\n                            z=\"1\"\n                          >\n                            Recipient Wallet\n                          </Span>\n                        }\n                    </Item>\n                  }\n\n                  {(nfType === \"4\") &&\n                  <>\n                    <MultiRecipientsContainer>\n                      {\n                        multipleRecipients.map(oneRecipient => (\n                          <span key={oneRecipient}>\n                            {oneRecipient}\n                            <i onClick={() => removeRecipient(oneRecipient)}><CloseIcon /></i>\n                          </span>\n                        ))\n                      }\n                    </MultiRecipientsContainer>\n                    <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                      <Input\n                        required={multipleRecipients.length === 0}\n                        placeholder=\"Enter recipients wallet addresses seperated by a comma or by pressing the enter key\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={tempRecipeint}\n                        onKeyPress={handleSubsetInputChange}\n                        onChange={e => {\n                          const text = e.target.value;\n                          if(!LIMITER_KEYS.includes(text)){\n                            setTempRecipient(e.target.value)\n                          }\n                        }}\n                      />\n                      {nfRecipient.trim().length == 0 &&\n                          <Span\n                            padding=\"4px 10px\"\n                            right=\"0px\"\n                            top=\"0px\"\n                            pos=\"absolute\"\n                            color=\"#fff\"\n                            bg=\"#000\"\n                            size=\"0.7rem\"\n                            z=\"1\"\n                          >\n                            Recipient Wallet\n                          </Span>\n                        }\n                    </Item>\n                  </>\n                  }\n\n                  {nfType && nfSubEnabled &&\n                    <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Subject of Notification\"\n                        padding=\"12px\"\n                        borderBottom=\"1px solid #000\"\n                        weight=\"400\"\n                        size=\"1.2em\"\n                        bg=\"#fff\"\n                        value={nfSub}\n                        onChange={(e) => {setNFSub(e.target.value)}}\n                      />\n                      {nfSub.trim().length == 0 &&\n                          <Span\n                            padding=\"4px 10px\"\n                            right=\"0px\"\n                            top=\"0px\"\n                            pos=\"absolute\"\n                            color=\"#fff\"\n                            bg=\"#000\"\n                            size=\"0.7rem\"\n                            z=\"1\"\n                          >\n                            Subject\n                          </Span>\n                        }\n                    </Item>\n                  }\n\n                  {nfType &&\n                    <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                      <TextField\n                        required\n                        placeholder=\"Notification Message\"\n                        rows=\"6\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        weight=\"400\"\n                        border=\"1px solid #000\"\n                        bg=\"#fff\"\n                        value={nfMsg}\n                        onChange={(e) => {setNFMsg(e.target.value)}}\n                        autocomplete=\"off\"\n                      />\n                    </Item>\n                  }\n\n                  {nfType && nfMediaEnabled &&\n                    <ItemH padding=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                      <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                        <BsFillImageFill size={24} color=\"#000\"/>\n                      </Item>\n                      <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                        <Input\n                          required\n                          placeholder=\"Media URL for Notification\"\n                          padding=\"12px\"\n                          border=\"1px solid #000\"\n                          radius=\"4px\"\n                          weight=\"400\"\n                          bg=\"#f1f1f1\"\n                          value={nfMedia}\n                          onChange={(e) => {setNFMedia(e.target.value)}}\n                        />\n                        {nfMedia.trim().length == 0 &&\n                            <Span\n                              padding=\"4px 10px\"\n                              right=\"0px\"\n                              top=\"0px\"\n                              pos=\"absolute\"\n                              color=\"#fff\"\n                              bg=\"#000\"\n                              size=\"0.7rem\"\n                              z=\"1\"\n                            >\n                              Media URL\n                            </Span>\n                          }\n                        </Item>\n                    </ItemH>\n                  }\n\n                  {nfType && nfCTAEnabled &&\n                    <ItemH margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                      <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                        <FiLink size={24} color=\"#000\"/>\n                      </Item>\n                      <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                        <Input\n                          required\n                          placeholder=\"Call to Action Link\"\n                          padding=\"12px\"\n                          border=\"1px solid #000\"\n                          radius=\"4px\"\n                          weight=\"400\"\n                          bg=\"#f1f1f1\"\n                          value={nfCTA}\n                          onChange={(e) => {setNFCTA(e.target.value)}}\n                        />\n                        {nfCTA.trim().length == 0 &&\n                            <Span\n                              padding=\"4px 10px\"\n                              right=\"0px\"\n                              top=\"0px\"\n                              pos=\"absolute\"\n                              color=\"#fff\"\n                              bg=\"#000\"\n                              size=\"0.7rem\"\n                              z=\"1\"\n                            >\n                              Call to Action URL\n                            </Span>\n                          }\n                        </Item>\n                    </ItemH>\n                  }\n\n                  {nfInfo && nfProcessing != 1 &&\n                    <Item\n                      color=\"#fff\"\n                      bg=\"#e1087f\"\n                      padding=\"10px 15px\"\n                      margin = \"15px 0px\"\n                    >\n                      <Span\n                        color=\"#fff\"\n                        textTransform=\"uppercase\"\n                        spacing=\"0.1em\"\n                        weight=\"400\"\n                        size=\"1em\"\n                      >\n                        {nfInfo}\n                      </Span>\n                    </Item>\n                  }\n\n                  {nfType &&\n                    <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                      <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={nfProcessing == 1 ? true : false}\n                      >\n                        {nfProcessing == 1 &&\n                          <Loader\n                            type=\"Oval\"\n                            color=\"#fff\"\n                            height={24}\n                            width={24}\n                            />\n                        }\n                        {nfProcessing != 1 &&\n                          <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Send Notification\" />\n                        }\n                      </Button>\n                    </Item>\n                  }\n                </FormSubmision>\n              </Item>\n            </Content>\n          </Section>\n        )\n      }\n\n\n    </>\n  );\n}\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst DropdownStyledParent = styled.div `\n  .is-open {\n    margin-bottom: 130px;\n  }\n`\n\nconst MultiRecipientsContainer = styled.div`\n  width: 100%;\n  padding: 0px 20px;\n  padding-top: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 7px 15px;\n  \n  span {\n    color: white;\n    background: #e20880;\n    padding: 6px 10px;\n    border-radius: 5px;\n\n    i{\n      cursor: pointer;\n      margin-left: 25px;\n    }\n  }\n`;\n\nconst DropdownStyled = styled(Dropdown)`\n\n  .Dropdown-control {\n    background-color: #000;\n    color: #fff;\n    padding: 12px 52px 12px 10px;\n    border: 1px solid #000;\n    border-radius: 4px;\n  }\n\n  .Dropdown-placeholder {\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.2em;\n    font-size: 0.8em;\n  }\n\n  .Dropdown-arrow {\n    top: 18px;\n    bottom: 0;\n    border-color: #fff transparent transparent;\n  }\n\n  .Dropdown-menu {\n    border: 1px solid #000;\n    box-shadow: none;\n    background-color: #000;\n    border-radius: 0px;\n    margin-top: -3px;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .Dropdown-option {\n    background-color: rgb(35 35 35);\n    color: #ffffff99;\n\n    text-transform: uppercase;\n    letter-spacing: 0.2em;\n    font-size: 0.7em;\n    padding: 15px 20px;\n  }\n\n  .Dropdown-option:hover {\n    background-color: #000000;\n    color: #fff;\n  }\n`\n\n\n// Export Default\nexport default SendNotifications;\n","import React from \"react\";\n\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  ItemBreak,\n  H1,\n  H2,\n  H3,\n  Image,\n  P,\n  Span,\n  Anchor,\n  Button,\n  Showoff,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\nimport { useClickAway } from \"react-use\";\nimport config from \"config\";\nimport styled, { css } from \"styled-components\";\nimport { ToastContainer, toast as toaster  } from 'react-toastify';\nimport { ALLOWED_CORE_NETWORK } from \"pages/Home\";\n\nimport Dropdown from \"react-dropdown\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport \"react-dropdown/style.css\";\n\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { postReq } from \"api\";\nimport Loader from 'react-loader-spinner';\n\nconst ethers = require(\"ethers\");\n\nconst CHANNNEL_DEACTIVATED_STATE = 2;\nconst CHANNEL_BLOCKED_STATE = 3;\nconst CHANNEL_ACTIVE_STATE = 1;\nconst MIN_STAKE_FEES = 50;\n\n// Create Header\nfunction ChannelSettings({\n  epnsReadProvider, epnsWriteProvider, epnsCommReadProvider, epnsCommWriteProvider,\n  setKey\n}) {\n  const { active, error, account, library, chainId } = useWeb3React();\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const popupRef = React.useRef(null);\n  const [loading, setLoading] = React.useState(false);\n  const [channelState, setChannelState] = React.useState(CHANNEL_ACTIVE_STATE);\n  const [showPopup, setShowPopup] = React.useState(false);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(MIN_STAKE_FEES);\n  const [poolContrib, setPoolContrib] = React.useState(0);\n\n  useClickAway(popupRef, () => {\n    if(showPopup){\n      setShowPopup(false);\n    }\n  });\n\n  // toaster customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n        type=\"Oval\"\n        color={color}\n        height={30}\n        width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  // Toastify\n  let notificationToast = () => toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\"/>, {\n    position: \"bottom-right\",\n    autoClose: false,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\n  const isChannelDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\n  const isChannelBlocked = channelState === CHANNEL_BLOCKED_STATE;\n\n  const getChannelData = async (contract, channel) => {\n    return new Promise((resolve, reject) => {\n      // To get channel info from a channel address\n      contract\n        .channels(channel)\n        .then((response) => {\n          console.log(\"getChannelInfo() --> %o\", response);\n          setChannelState(response.channelState);\n          setPoolContrib(\n           +EPNSCoreHelper.formatBigNumberToMetric(\n              response.poolContribution,\n              true\n            )\n          );\n        })\n        .catch((err) => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    });\n  };\n\n  React.useEffect(() => {\n    const coreProvider = onCoreNetwork ?\n    library : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {etherscan: config.etherscanToken})\n    var signer = library.getSigner(account);\n    let contract = new ethers.Contract(\n      addresses.epnscore,\n      abis.epnscore,\n      coreProvider\n    );\n    getChannelData(contract, account);\n  }, [account]);\n\n  const toggleChannel = () => {\n    if(isChannelBlocked) return;\n    if(isChannelDeactivated){\n      setShowPopup(true)\n    }else{\n      deactivateChannel();\n    }\n  }\n\n  const bn = function (number, defaultValue = null) { if (number == null) { if (defaultValue == null) { return null } number = defaultValue } return ethers.BigNumber.from(number) }\n  const tokensBN = function (amount) { return (bn(amount).mul(bn(10).pow(18))) }\n\n  const activateChannel = async () => {\n    // First Approve DAI\n    setLoading(true);\n    var signer = library.getSigner(account);\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n\n    await library.waitForTransaction(tx.hash);\n\n    console.log(\n      {\n        bignum: tokensBN(channelStakeFees),\n        bignumstr: tokensBN(channelStakeFees).toString()\n      }\n    )\n    await epnsWriteProvider.reactivateChannel(fees)\n    .then(async (tx) => {\n      console.log(tx);\n      console.log (\"Transaction Sent!\");\n\n      toaster.update(notificationToast(), {\n        render: \"Transaction sent\",\n        type: toaster.TYPE.INFO,\n        autoClose: 5000\n      });\n\n      await tx.wait(1);\n      toaster.update(notificationToast(), {\n        render: \"Channel Recreated\",\n        type: toaster.TYPE.INFO,\n        autoClose: 5000\n      });\n      setChannelState(CHANNEL_ACTIVE_STATE);\n      setKey(Math.random());//force the sibling component to rerender\n    })\n    .catch(err => {\n      console.log(\"!!!Error reactivateChannel() --> %o\", err);\n      toaster.update(notificationToast(), {\n        render: \"Transacion Failed: \" + err.error?.message || err.message,\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000\n      });\n    })\n    .finally(() => {\n      setLoading(false);\n      setShowPopup(false);\n    })\n  }\n\n  const deactivateChannel = async () => {\n    setLoading(true);\n    if(!poolContrib) return;\n\n    const amountToBeConverted = parseInt(\"\"+poolContrib) - 10;\n    console.log(\"Amount To be converted==>\", amountToBeConverted);\n\n      \n    const {data: response} = await postReq('/channels/get_dai_to_push', {\n      value: amountToBeConverted\n    });\n\n    const pushValue = response.response.data.quote.PUSH.price;\n\n    const amountsOut = pushValue * Math.pow(10, 18);\n\n    await epnsWriteProvider.deactivateChannel(amountsOut.toString())\n    .then(async (tx) => {\n      console.log(tx);\n      console.log (\"Transaction Sent!\");\n\n      toaster.update(notificationToast(), {\n        render: \"Transaction sending\",\n        type: toaster.TYPE.INFO,\n        autoClose: 5000\n      });\n\n      await tx.wait(1);\n      console.log (\"Transaction Mined!\");\n      setChannelState(CHANNNEL_DEACTIVATED_STATE);\n      setKey(Math.random());//force the sibling component to rerender\n    })\n    .catch(err => {\n      console.log(\"!!!Error deactivateChannel() --> %o\", err);\n      console.log({\n        err\n      });\n      toaster.update(notificationToast(), {\n        render: \"Transacion Failed: \" + err.error?.message || err,\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000\n      });\n    })\n    .finally(() => {\n      // post op\n      setLoading(false);\n    })\n    // const deactivateRes = await contract.deactivateChannel(\n    //   amountsOut\n    // );\n\n    // console.log(deactivateRes);\n  }\n\n  if(!onCoreNetwork){ //temporarily deactivate the deactivate button\n    return <></>\n  }\n\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 10px\">\n          <Item align=\"flex-end\">\n            <ChannelActionButton\n              onClick={toggleChannel}\n            >\n              <ActionTitle>\n                { loading ?\n                  <Loader\n                    type=\"Oval\"\n                    color=\"#FFF\"\n                    height={16}\n                    width={16}\n                  /> : (isChannelBlocked ? \"Channel Blocked\" : (isChannelDeactivated ? \"Activate Channel\" : \"Deactivate Channel\"))\n                }\n              </ActionTitle>\n            </ChannelActionButton>\n          </Item>\n        </Content>\n        {\n          showPopup && (\n            <PopupOverlay >\n              <PopupSlider ref={popupRef}>\n              <Section>\n                <Content padding=\"50px 0px 0px 0px\">\n                  <Item align=\"flex-start\" margin=\"0px 20px\">\n                    <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n                  </Item>\n\n                  <Item\n                    margin=\"-10px 20px 20px 20px\"\n                    padding=\"20px 20px 10px 20px\"\n                    bg=\"#f1f1f1\"\n                  >\n                    <Slider\n                      defaultValue={MIN_STAKE_FEES}\n                      onChangeCommitted={(event, value) => setChannelStakeFees(Number(value))}\n                      aria-labelledby=\"discrete-slider\"\n                      valueLabelDisplay=\"auto\"\n                      step={MIN_STAKE_FEES}\n                      marks\n                      min={MIN_STAKE_FEES}\n                      max={25000}\n                    />\n                    <Span\n                      weight=\"400\"\n                      size=\"1.0em\"\n                      textTransform=\"uppercase\"\n                      spacing=\"0.2em\"\n                    >\n                      Amount Staked: {channelStakeFees} DAI\n                    </Span>\n                  </Item>\n\n                  <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n                    <Button\n                      bg=\"#e20880\"\n                      color=\"#fff\"\n                      flex=\"1\"\n                      radius=\"0px\"\n                      padding=\"20px 10px\"\n                      onClick={activateChannel}\n                    >\n                      {loading ?\n                        <Loader\n                          type=\"Oval\"\n                          color=\"#FFF\"\n                          height={16}\n                          width={16}\n                        /> : (\n                          <Span\n                            color=\"#fff\"\n                            weight=\"400\"\n                            textTransform=\"uppercase\"\n                            spacing=\"0.1em\"\n                          >\n                            Reactivate Channel\n                          </Span>\n                        ) \n                      }\n                    </Button>\n                  </Item>\n                </Content>\n              </Section>\n              </PopupSlider>\n            </PopupOverlay>\n          )\n        } \n      </Section>\n    </>\n  );\n}\n\nconst PopupOverlay = styled.div`\n  background: rgba(0,0,0,0.5);\n  height: 100vh;\n  width: 100vw;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PopupSlider = styled.div`\n    height: 200px;\n    width: 70vw;\n    background: white;\n`;\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ActionTitle = styled.span`\n  ${(props) =>\n    props.hideit &&\n    css`\n      visibility: hidden;\n    `};\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\nconst DropdownStyledParent = styled.div`\n  .is-open {\n    margin-bottom: 130px;\n  }\n`;\n\nconst MultiRecipientsContainer = styled.div`\n  width: 100%;\n  padding: 0px 20px;\n  padding-top: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 7px 15px;\n\n  span {\n    color: white;\n    background: #e20880;\n    padding: 6px 10px;\n    border-radius: 5px;\n\n    i {\n      cursor: pointer;\n      margin-left: 25px;\n    }\n  }\n`;\nconst Parent = styled(Section)`\n  padding: 20px;\n  margin: 0px 20px 0px 20px;\n`;\n\nconst DropdownStyled = styled(Dropdown)`\n  .Dropdown-control {\n    background-color: #000;\n    color: #fff;\n    padding: 12px 52px 12px 10px;\n    border: 1px solid #000;\n    border-radius: 4px;\n  }\n\n  .Dropdown-placeholder {\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.2em;\n    font-size: 0.8em;\n  }\n\n  .Dropdown-arrow {\n    top: 18px;\n    bottom: 0;\n    border-color: #fff transparent transparent;\n  }\n\n  .Dropdown-menu {\n    border: 1px solid #000;\n    box-shadow: none;\n    background-color: #000;\n    border-radius: 0px;\n    margin-top: -3px;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .Dropdown-option {\n    background-color: rgb(35 35 35);\n    color: #ffffff99;\n\n    text-transform: uppercase;\n    letter-spacing: 0.2em;\n    font-size: 0.7em;\n    padding: 15px 20px;\n  }\n\n  .Dropdown-option:hover {\n    background-color: #000000;\n    color: #fff;\n  }\n`;\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background-color: #674c9f;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\n// Export Default\nexport default ChannelSettings;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport { Section, Content } from \"components/SharedStyling\";\n\nimport SendNotifications from \"components/SendNotifications\";\nimport ChannelSettings from \"components/ChannelSettings\";\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelOwnerDashboard({\n  epnsReadProvider, epnsWriteProvider, epnsCommReadProvider, epnsCommWriteProvider,\n  channelAccount\n}) {\n  React.useEffect(() => {});\n  const [key, setKey] = React.useState(50);\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <ChannelSettings\n            epnsReadProvider={epnsReadProvider}\n            epnsCommReadProvider={epnsCommReadProvider}\n            epnsWriteProvider={epnsWriteProvider}\n            epnsCommWriteProvider={epnsCommWriteProvider}\n            setKey={setKey}\n          />\n          <SendNotifications\n            key={key}\n            epnsReadProvider={epnsReadProvider}\n            epnsCommReadProvider={epnsCommReadProvider}\n            epnsWriteProvide={epnsWriteProvider}\n            epnsCommWriteProvider={epnsCommWriteProvider}\n            channelAccount={channelAccount}\n          />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n// Export Default\nexport default ChannelOwnerDashboard;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport CreateChannel from 'components/CreateChannel';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelCreationDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <CreateChannel />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelCreationDashboard;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled, { css } from 'styled-components';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport Loader from 'react-loader-spinner'\n\nimport AliasVerificationodal from 'components/AliasVerificationModal';\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport config from 'config';\nimport NotificationToast from \"components/NotificationToast\";\nimport Feedbox from 'segments/Feedbox';\nimport ViewChannels from 'segments/ViewChannels';\nimport Info from \"segments/Info\";\nimport ChannelOwnerDashboard from 'segments/ChannelOwnerDashboard';\nimport ChannelCreationDashboard from 'segments/ChannelCreationDashboard';\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\nimport { postReq } from \"api\"\n\nexport const ALLOWED_CORE_NETWORK = 42 //chainId of networks which we have deployed the core contract on\nconst CHANNEL_TAB = 1 //Default to 1 which is the channel tab\nconst NOTIF_TAB = 0;\n// Create Header\nfunction Home({ setBadgeCount, bellPressed }) {\n  ReactGA.pageview('/home');\n\n  const { active, error, account, library, chainId } = useWeb3React();\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const INITIAL_OPEN_TAB =  CHANNEL_TAB ;//if they are not on a core network.redirect then to the notifications page\n\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null); // read provider for epns core functions\n  const [epnsCommReadProvider, setEpnsCommReadProvider] = React.useState(null); // read provider for epns communicator functions\n  const [epnsWriteProvider, setEpnsWriteProvider] = React.useState(null);\n  const [epnsCommWriteProvider, setEpnsCommWriteProvider] = React.useState(null);\n \n  const [controlAt, setControlAt] = React.useState(0);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n  // toast related section\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n  const showNetworkToast = () => {\n    showToast({\n      notificationTitle: <span style={{color: \"#e20880\"}}> Invalid Network </span>,\n      notificationBody: \"Please connect to the Kovan network to access channels\"\n    });\n  }\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast()\n    }\n  }, [toast]);\n  // toast related section\n\n  React.useEffect(() => {\n    (async function(){\n      const coreProvider = onCoreNetwork ?\n        library : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {etherscan: config.etherscanToken})\n      // if we are not on the core network then check for if this account is an alias for another channel\n      if(!onCoreNetwork){\n        // for now resolve a fake promise to return the current user address as the eth account of the channel's current alias\n        const aliasEth = await postReq('/channels/get_eth_address' , {\n            \"aliasAddress\": account,\n            \"op\":\"read\"\n        })\n        .then(({data}) => {\n          console.log({data})\n          const ethAccount =  data;\n          if(ethAccount){\n            setAliasEthAccount(ethAccount.ethAddress);\n          }\n          return data;\n        }); \n        if(aliasEth){\n          // for now resolve a fake promise to return the current user address as the eth account of the channel's current alias\n          await postReq('/channels/get_alias_verification_status', {\n            \"aliasAddress\": account,\n            \"op\":\"read\"\n          })\n          .then(({data}) => {\n            // if it returns undefined then we need to let them know to verify their channel\n            if(!data){\n              setAliasVerified(false);\n              return;\n            }\n            const { status } = data;\n            setAliasVerified(\n              status || null\n            )\n            return data\n          }); \n        } \n      }\n      // if we are not on the core network then fetch if there is an alias address from the api\n      // inititalise the read contract for the core network\n      const coreContractInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, coreProvider);\n      setEpnsReadProvider(coreContractInstance);\n      // inititalise the read contract for the core network\n  \n      // initialise the read contract for the communicator function\n      const commAddress = onCoreNetwork ? addresses.epnsEthComm : addresses.epnsPolyComm;\n      const commContractInstance = new ethers.Contract(commAddress, abis.epnsComm, library);\n      setEpnsCommReadProvider(commContractInstance);\n      // initialise the read contract for the communicator function\n  \n      if (!!(library && account)) {\n        let signer = library.getSigner(account);\n        const coreSignerInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n        setEpnsWriteProvider(coreSignerInstance);\n        const communicatorSignerInstance = new ethers.Contract(commAddress, abis.epnsComm, signer);\n        setEpnsCommWriteProvider(communicatorSignerInstance)\n      }\n    })();\n\n  }, [account, chainId]);\n\n  React.useEffect(() => {\n    if(!epnsReadProvider || !epnsCommReadProvider) return;\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    setAdminStatusLoaded(false);\n    userClickedAt(INITIAL_OPEN_TAB);\n    setChannelJson([]);\n\n    // EPNS Read Provider Set\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\n      // Instantiate Data Stores\n      UsersDataStore.instance.init(account, epnsReadProvider, epnsCommReadProvider);\n      ChannelsDataStore.instance.init(account, epnsReadProvider, epnsCommReadProvider);\n      checkUserForChannelRights();\n    }\n\n  }, [epnsReadProvider, epnsCommReadProvider]);\n\n\n  // Revert to Feedbox on bell pressed\n  React.useEffect(() => {\n    setControlAt(0);\n  }, [bellPressed]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  //Start Listening...\n  const listenerForChannelRights = async () => {\n    ChannelsDataStore.instance.addCallbacks(\n      ChannelEvents.ADD_CHANNEL_SELF,\n      \"FromCreateChannel\",\n      () => {\n        checkUserForChannelRights();\n      }\n    );\n  }\n\n  // Check if a user is a channel or not\n  const checkUserForChannelRights = async () => {\n    // Check if account is admin or not and handle accordingly\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\n    console.log({epnsReadProvider});\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\n      .then(response => {\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch(e => {\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      })\n      .finally(() =>{\n        setAdminStatusLoaded(true);\n      });\n\n    // Start listening\n    listenerForChannelRights();\n  }\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0)\n          }}\n        >\n          <ControlImage src=\"./svg/feedbox.svg\" active={controlAt == 0 ? 1 : 0} />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Feedbox</ControlText>\n        </ControlButton>\n\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\n          onClick={() => {\n            // if they arent connected to the right channels then we have to restrict access to here\n            // if(!onCoreNetwork){\n            //   return showNetworkToast();\n            // }\n            userClickedAt(1)\n          }}\n        >\n          <ControlImage src=\"./svg/channel.svg\" active={controlAt == 1 ? 1 : 0}/>\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              // if youre not on kovan and you dont have a channel, you cannot create except on kovan, so throw error\n              if(!channelAdmin && !onCoreNetwork){\n                return showNetworkToast();\n              }\n              if(channelAdmin && !aliasVerified && !onCoreNetwork){\n                return setModalOpen(true);\n              }\n              userClickedAt(2)\n            }\n          }}\n        >\n          {!adminStatusLoaded &&\n            <Loader\n               type=\"Oval\"\n               color=\"#674c9f\"\n               height={32}\n               width={32}\n            />\n          }\n          {channelAdmin && adminStatusLoaded && (onCoreNetwork ? true : aliasVerified) &&\n            <ControlChannelContainer>\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>{channelJson.name}</ControlChannelText>\n            </ControlChannelContainer>\n          }\n          {channelAdmin && adminStatusLoaded && ((aliasVerified === false) && !onCoreNetwork) &&\n            <ControlChannelContainer>\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>Verify channel alias</ControlChannelText>\n            </ControlChannelContainer>\n          }\n          {channelAdmin && adminStatusLoaded && ((aliasVerified === null) && !onCoreNetwork) &&\n            <ControlChannelContainer>\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                Contact the admin\n              </ControlChannelText>\n            </ControlChannelContainer>\n          }\n          {!channelAdmin && adminStatusLoaded &&\n            <>\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 2 ? 1 : 0}/>\n              <ControlText active={controlAt == 2 ? 1 : 0}>Create Your Channel</ControlText>\n            </>\n          }\n        </ControlButton>\n\n        <ControlButton index={3} active={controlAt == 3 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(3)\n          }}\n        >\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\n          <ControlText active={controlAt == 3 ? 1 : 0}>Receive Notifs</ControlText>\n        </ControlButton>\n      </Controls>\n      <Interface>\n        {controlAt == 0 &&\n          <Feedbox\n            epnsReadProvider={epnsReadProvider}\n          />\n        }\n        {controlAt == 1 &&\n          <ViewChannels\n            epnsReadProvider={epnsReadProvider}\n            epnsCommReadProvider={epnsCommReadProvider}\n            epnsWriteProvide={epnsWriteProvider}\n            epnsCommWriteProvider={epnsCommWriteProvider}\n          />\n        }\n        {controlAt == 2 && !channelAdmin && adminStatusLoaded &&\n          <ChannelCreationDashboard />\n        }\n        {controlAt == 2 && channelAdmin && adminStatusLoaded &&\n          <ChannelOwnerDashboard \n            epnsReadProvider={epnsReadProvider}\n            epnsCommReadProvider={epnsCommReadProvider}\n            epnsWriteProvider={epnsWriteProvider}\n            epnsCommWriteProvider={epnsCommWriteProvider}\n            channelAccount={!onCoreNetwork ? aliasEthAccount : account}\n          />\n        }\n        {controlAt == 3 &&\n          <Info/>\n        }\n        { toast && \n          <NotificationToast\n            notification={toast}\n            clearToast = {clearToast}\n          />\n        }\n        {\n          modalOpen &&\n          <AliasVerificationodal\n            onClose={() => setModalOpen(false)}\n            onSuccess={() => setAliasVerified(true)}\n            verificationStatus={aliasVerified}\n          />\n        }\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\n\nconst ControlButton = styled.div`\n  flex: 1 1 21%;\n  height: 120px;\n  min-width: 200px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  border-bottom: 10px solid rgb(180,180,180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(3.5) translate(-20px, 0px);\n    opacity: 0.4;\n  `};\n`\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(1.3) translate(-10px, 0px);\n  `};\n`\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`\n\nconst ControlChannelImage = styled.img`\n    width: 20%;\n    margin-bottom: 10px;\n    transition: transform .2s ease-out;\n    ${ props => props.active && css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n  transition: transform .2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${ props => props.active && css`\n    transform: scale(1.1) translate(0px, -20px);\n  `};\n\n`\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 15px;\n  overflow: hidden;\n`\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {Section, Content, Item, ItemH, Button} from 'components/SharedStyling';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header({ badgeCount, bellPressedCB }) {\n  const context = useWeb3React<Web3Provider>()\n\n  const { active, error, account, chainId } = useWeb3React();\n  const { deactivate } = context\n\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to the Kovan or Polygon(Mumbai) network\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  const bellPressed = () => {\n    setShowLoginControls(!showLoginControls);\n  }\n\n  const disconnect = () => {\n    setShowLoginControls(false);\n    deactivate();\n  }\n\n  return (\n    <HeaderContainer\n      direction=\"row\"\n      padding=\"10px 15px\"\n    >\n      <ItemH\n        justify=\"flex-start\"\n        flex=\"0\"\n      >\n        {active && !error &&\n          <Profile />\n        }\n        {!active &&\n          <Logo src=\"epns.png\" />\n        }\n      </ItemH>\n\n      <ItemH\n        justify=\"flex-end\"\n      >\n        {active && !error &&\n          <Bell\n            badgeCount={badgeCount}\n            bellPressedCB={bellPressed}\n            width={32}\n            height={32}\n          />\n        }\n\n        {showLoginControls &&\n          <Item\n            position=\"absolute\"\n          >\n            <Button\n              bg=\"#000\"\n              size=\"12px\"\n              spacing=\"0.2em\"\n              textTransform=\"uppercase\"\n              weight=\"600\"\n              radius=\"20px\"\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </Button>\n          </Item>\n        }\n\n        <ItemH\n          justify=\"flex-end\"\n          flex=\"initial\"\n        >\n          {!!error &&\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n          }\n          {!active && !error &&\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n          }\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n        </ItemH>\n      </ItemH>\n    </HeaderContainer>\n  );\n}\n\n// CSS Styles\nconst HeaderContainer = styled(Section)`\n  @media (max-width: 1440px) {\n    background: rgb(255,255,255);\n  }\n`\n\nconst Logo = styled.img`\n  height: 40px;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, H2, H3, B, A} from 'components/SharedStyling';\n\nimport Loader from 'react-loader-spinner'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks'\nimport {\n  injected,\n  walletconnect,\n  portis,\n  trezor,\n  ledger\n} from 'connectors'\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n\nimport Home from 'pages/Home';\nimport Header from 'segments/Header';\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst web3Connectors = {\n  Injected: {obj: injected, logo: './svg/login/metamask.svg', title: 'MetaMask'},\n  WalletConnect: {obj: walletconnect, logo: './svg/login/walletconnect.svg', title: 'Wallet Connect'},\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\n  Ledger: {obj: ledger, logo: './svg/login/ledger.svg', title: 'Ledger'},\n  Portis: {obj: portis, logo: './svg/login/portis.svg', title: 'Portis'},\n}\n\n\n\nexport default function() {\n  function getLibrary(provider, connector) {\n    const gottenProvider = new ethers.providers.Web3Provider(provider, \"any\"); // this will vary according to whether you use e.g. ethers or web3.js\n    // adding this is important to deal with changing networks\n    gottenProvider.on(\"network\", (newNetwork, oldNetwork) => {\n      // When a Provider makes its initial connection, it emits a \"network\"\n      // event with a null oldNetwork along with the newNetwork. So, if the\n      // oldNetwork exists, it represents a changing network\n      if (oldNetwork) {\n          window.location.reload();\n          // use this tric to rerender the application instead of refreshing the page\n      }\n    });\n    return gottenProvider;\n  }\n\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App  />\n    </Web3ReactProvider>\n  )\n}\n\n\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, activate, active, error } = context\n\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\n  const [ bellPressed, setBellPressed ] = React.useState(0);\n\n  // Initialize GA\n  ReactGA.initialize('UA-165415629-5');\n  ReactGA.pageview('/login');\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n      <>\n        <HeaderContainer>\n          <Header\n            badgeCount={badgeCount}\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\n          />\n        </HeaderContainer>\n\n        <ParentContainer>\n        {(active) && !error && (\n          <HomeContainer>\n            <Home\n              setBadgeCount={setBadgeCount}\n              bellPressed={bellPressed}\n            />\n          </HomeContainer>\n\n        )}\n\n        {!active &&\n          <Item>\n            <ProviderLogo src=\"./epnshomelogo.png\" srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"} />\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"15px\"\n              radius=\"12px\"\n            >\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Connect</Span><Span weight=\"200\"> Your Wallet</Span>\n              </H2>\n\n              <ItemH\n                maxWidth=\"800px\"\n                align=\"stretch\"\n              >\n                {Object.keys(web3Connectors).map(name => {\n                  const currentConnector = web3Connectors[name].obj\n                  const activating = currentConnector === activatingConnector\n                  const connected = currentConnector === connector\n                  const disabled = !triedEager || !!activatingConnector || connected || !!error\n                  const image = web3Connectors[name].logo\n                  const title = web3Connectors[name].title\n\n                  return (\n                    <ProviderButton\n                      disabled={disabled}\n                      key={name}\n                      onClick={() => {\n                        setActivatingConnector(currentConnector)\n                        activate(currentConnector)\n                      }}\n                      border=\"#35c5f3\"\n                    >\n                      <ProviderImage src={image} />\n\n                      <Span\n                        spacing=\"0.1em\"\n                        textTransform=\"uppercase\"\n                        size=\"12px\"\n                        weight=\"600\"\n                        padding=\"10px\"\n                      >\n                        {title}\n                      </Span>\n                    </ProviderButton>\n                  )\n                })}\n              </ItemH>\n            </Item>\n\n            <Span margin=\"10px\" size=\"14px\">\n              By unlocking your wallet, <B>You agree</B> to our <A href=\"https://epns.io/tos\" target=\"_blank\">Terms of Service</A> and our <A href=\"https://epns.io/privacy\" target=\"_blank\">Privacy Policy</A>.\n            </Span>\n          </Item>\n        }\n        </ParentContainer>\n\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n        />\n      </>\n  );\n}\n\n\n// CSS STYLES\nconst HeaderContainer = styled.header`\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 50px 20px;\n  flex: 1;\n`\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 10px 20px 20px 20px;\n  min-width: 200px;\n`\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 280px;\n  background: #fff;\n  outline: 0;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n`\n\nconst ProviderImage = styled.img`\n  width: 32px;\n  max-height: 32px;\n  padding: 10px;\n`\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {}\n  .Toastify__toast {}\n  .Toastify__toast--error {}\n  .Toastify__toast--warning {}\n  .Toastify__toast--success {}\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\n\nimport './index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\"),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0x840afC1587c42ED1B8a9001414Feaac75E1E10f9\",\n  epnsEthComm: \"0x9c38f74e22c7c3bebba9f23db19f8fbde84693a1\", // the ropsten core contract\n  epnsPolyComm: \"0xfd158f73c1331EE5055fAD91d166804D29236CFb\", // the ploygon comm contract\n  dai: \"0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\",\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n  staking: \"0xd9218bb2a7Ff0131555A9b6F179fF5103a27a286\",\n  yieldFarmPUSH: \"0xFe0bcF750d4042480943CC8bA818CA3482DDf691\",\n  yieldFarmLP: \"0xE65fE4a8BCEB8A71D6A8D06dF2D91a9637081c61\",\n  epnsToken: \"0x38c4A4C7fa26eA48E34C45a9F6bDb5DA3f599c55\",\n  epnsLPToken: \"0x69E12FfD1170d851c096FfEC6A8eF27D26D96c0f\",\n  rockstar: \"0xCD1B6C8DDB9A735AA5961Ab4aa5B513fba23A3a3\", //ropsten address\n  batchMintNFT: \"0x9A20272669BBAa6254358ba4BB0520fFc813691C\", //ropsten address\n  NFTRewards: \"0x1f4CA0b2B0541b942A440A3f6673883eEacb2cb3\", //ropsten address\n  distributor: \"0x4Cd9Fe2E0acb9BC28fA51106b99825bd7a02309e\", //ropsten address\n};\n\nexport default addresses;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\nimport daiAbi from \"./abis/dai\";\nimport epnsTokenAbi from \"./abis/EPNS.json\";\nimport stakingAbi from \"./abis/Staking.json\";\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\nimport rockstarAbi from \"./abis/Rockstar.json\";\nimport ec721Abi from \"./abis/ERC721.json\";\nimport NFTRewards from \"./abis/NFTRewards.json\";\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n  epnsPolyComm: epnsCommAbi,\n  epnsComm: epnsCommAbi,\n  dai: daiAbi,\n  epnsToken: epnsTokenAbi,\n  staking: stakingAbi,\n  yieldFarming: yieldFarmingAbi,\n  rockstar: rockstarAbi,\n  erc721: ec721Abi,\n  NFTRewards: NFTRewards,\n  distributor: MerkleDistributorAbi,\n};\n\nexport { default as addresses } from \"./addresses\";\n","import React from \"react\";\nimport Select from 'react-select';\nimport styled, { css } from \"styled-components\";\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  ItemBreak,\n  H1,\n  H2,\n  H3,\n  Image,\n  P,\n  Span,\n  Anchor,\n  Button,\n  Showoff,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport { FiLink } from \"react-icons/fi\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport Loader from \"react-loader-spinner\";\n\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require(\"ethers\");\n\nconst ipfs = require(\"ipfs-api\")();\n\nconst minStakeFees = 50;\nconst ALIAS_CHAINS = [\n  {value: \"POLYGON_TEST_MUMBAI:80001\", label:\"Polygon\"}\n];\n\n// Create Header\nfunction CreateChannel() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(0);\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\n\n  const [uploadDone, setUploadDone] = React.useState(false);\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\n\n  const [chainDetails, setChainDetails] = React.useState(\"\");\n  const [channelName, setChannelName] = React.useState(\"\");\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\n  const [channelURL, setChannelURL] = React.useState(\"\");\n  const [channelFile, setChannelFile] = React.useState(undefined);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\n\n  const [stepFlow, setStepFlow] = React.useState(1);\n\n  React.useEffect(() => {});\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => {\n    console.log(status, meta, file);\n  };\n\n  const onDropHandler = (files) => {\n    //   var file = files[0]\n    //   const reader = new FileReader();\n    //   reader.onload = (event) => {\n    //     console.log(event.target.result);\n    //   };\n    //   reader.readAsDataURL(file);\n    // setChannelFile(file);\n    // console.log(\"Drop Handler\");\n    // console.log(file);\n  };\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleLogoSubmit = (files, allFiles) => {\n    // console.log(files.map(f => f.meta))\n    allFiles.forEach((f) => {\n      var file = f.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      // console.log(f.file);\n\n      reader.onloadend = function(e) {\n        // console.log(reader.result);\n        const response = handleLogoSizeLimitation(reader.result);\n        if (response.success) {\n          setStepFlow(2);\n          setProcessing(0);\n          setUploadDone(true);\n          setChannelFile(reader.result);\n        } else {\n          setProcessing(3);\n          setProcessingInfo(response.info);\n        }\n      };\n    });\n  };\n\n  const handleLogoSizeLimitation = (base64) => {\n    // Setup Error on higher size of 128px\n    var sizeOf = require(\"image-size\");\n    var base64Data = base64.split(\";base64,\").pop();\n    var img = Buffer.from(base64Data, \"base64\");\n    var dimensions = sizeOf(img);\n\n    // Only proceed if image is equal to or less than 128\n    if (dimensions.width > 128 || dimensions.height > 128) {\n      console.log(\"Image size check failed... returning\");\n      return {\n        success: 0,\n        info: \"Image size check failed, Image should be 128X128PX\",\n      };\n    }\n\n    // only proceed if png or jpg\n    // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\n    // char(0) => '/' : jpg\n    // char(0) => 'i' : png\n    let fileext;\n    console.log(base64Data.charAt(0));\n    if (base64Data.charAt(0) == \"/\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else if (base64Data.charAt(0) == \"i\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else {\n      return {\n        success: 0,\n        info: \"Image extension should be jpg or png\",\n      };\n    }\n  };\n\n  const handleCreateChannel = async (e) => {\n    // Check everything in order\n    // skip this for now\n    e.preventDefault();\n\n    if (\n      isEmpty(channelName) ||\n      isEmpty(channelInfo) ||\n      isEmpty(channelURL) ||\n      isEmpty(channelFile) ||\n      channelAlias ? isEmpty(chainDetails) : (chainDetails ? isEmpty(channelAlias) : false)\n    ) {\n      setProcessing(3);\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\n\n      return false;\n    }\n\n    // Check complete, start logic\n    setChannelInfoDone(true);\n    setProcessing(1);\n\n    console.log({\n      chainDetails,\n      channelAlias\n    })\n    var chainDetailsSplit = chainDetails.split(\":\");\n    var blockchain = chainDetailsSplit[0];\n    var chain_id = chainDetailsSplit[1];\n    var address = channelAlias;\n\n\n    const input = JSON.stringify({\n      name: channelName,\n      info: channelInfo,\n      url: channelURL,\n      icon: channelFile,\n      blockchain: blockchain,\n      chain_id: chain_id,\n      address: address,\n    });\n\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    setProcessingInfo(\"Uploading Payload...\");\n    const storagePointer = await ipfs.add(input);\n    console.log(\"IPFS storagePointer:\", storagePointer);\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\n    //console.log(await ipfs.cat(storagePointer));\n\n    // Send Transaction\n    // First Approve DAI\n    var signer = library.getSigner(account);\n\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n\n    // Pick between 50 DAI AND 25K DAI\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\n\n    await library.waitForTransaction(tx.hash);\n\n    let contract = new ethers.Contract(\n      addresses.epnscore,\n      abis.epnscore,\n      signer\n    );\n\n    const channelType = 2; // Open Channel\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.createChannelWithFees(\n      channelType,\n      identityBytes,\n      fees\n    );\n\n    setProcessingInfo(\"Creating Channel TX in progress\");\n    anotherSendTxPromise\n      .then(async function(tx) {\n        console.log(tx);\n        console.log(\"Check: \" + account);\n        await library.waitForTransaction(tx.hash);\n        setProcessing(3);\n        setProcessingInfo(\"Channel Created\");\n      })\n      .catch((err) => {\n        console.log(\"Error --> %o\", err);\n        console.log({err});\n        setProcessing(3);\n        setProcessingInfo(\n          \"!!!PRODUCTION ENV!!! Contact support@epns.io to whitelist your wallet\"\n        );\n      });\n  };\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  //mind Dai\n  const mintDai = async () => {\n    try{\n      var signer = library.getSigner(account);\n      let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\n      console.log({\n        daiContract\n      });\n      console.log(1);\n      let daiAmount = 1000;\n      const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\n      console.log(2);\n      var mintTransactionPromise = daiContract.mint(amount);\n      console.log(3);\n      const tx = await mintTransactionPromise;\n      console.log(tx);\n      await library.waitForTransaction(tx.hash);\n      console.log(4);\n      setProcessingInfo(\"1000 Dai minted successfully!\");\n      console.log(\"Transaction Completed\");\n    }catch(err){\n      console.log(err)\n    }\n  };\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Create\n              </Span>\n              <Span weight=\"200\"> Your Channel!</Span>\n            </H2>\n            <H3>\n              <b>Ethereum Push Notification Service</b> (EPNS) makes it\n              extremely easy to open and maintain a genuine channel of\n              communication with your users.\n            </H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content padding=\"0px 20px 20px\">\n          <ItemH justify=\"space-between\">\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 1 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 2 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 3 ? \"active\" : \"inactive\"}\n            />\n            <Line />\n          </ItemH>\n        </Content>\n      </Section>\n\n      {/* Image Upload Section */}\n      {!uploadDone && (\n        <Section>\n          <Content padding=\"50px 20px 20px\">\n            <Item align=\"flex-start\">\n              <H3 color=\"#e20880\">\n                Upload Channel Logo to start the process. Make sure image is\n                128x128px.\n              </H3>\n            </Item>\n\n            <Item margin=\"-10px 0px 20px 0px\">\n              <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleLogoSubmit}\n                onDrop={onDropHandler}\n                maxFiles={1}\n                multiple={false}\n                accept=\"image/jpeg,image/png\"\n              />\n            </Item>\n            <Item align=\"flex-end\">\n              <Minter\n                onClick={() => {\n                  mintDai();\n                }}\n              >\n                <Pool>\n                  <br></br>\n                  <PoolShare>Get Free DAI for Channel</PoolShare>\n                </Pool>\n              </Minter>\n            </Item>\n          </Content>\n        </Section>\n      )}\n\n      {/* Stake Fees Section */}\n      {uploadDone && !stakeFeesChoosen && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Slider\n                defaultValue={minStakeFees}\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={minStakeFees}\n                marks\n                min={minStakeFees}\n                max={25000}\n              />\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={() => {\n                  setStakeFeesChoosen(true);\n                  setStepFlow(3);\n                }}\n              >\n                <Span\n                  color=\"#fff\"\n                  weight=\"400\"\n                  textTransform=\"uppercase\"\n                  spacing=\"0.1em\"\n                >\n                  Continue\n                </Span>\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Entry */}\n      {uploadDone && stakeFeesChoosen && !channelInfoDone && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\n            </Item>\n\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleCreateChannel}\n            >\n              <Item\n                margin=\"-10px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Input\n                  required\n                  placeholder=\"Your Channel Name\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1.2em\"\n                  bg=\"#fff\"\n                  value={channelName}\n                  onChange={(e) => {\n                    setChannelName(e.target.value);\n                  }}\n                />\n                {channelName.trim().length == 0 && (\n                  <Span\n                    padding=\"4px 10px\"\n                    right=\"0px\"\n                    top=\"0px\"\n                    pos=\"absolute\"\n                    color=\"#fff\"\n                    bg=\"#000\"\n                    size=\"0.7rem\"\n                    z=\"1\"\n                  >\n                    Name of Channel\n                  </Span>\n                )}\n              </Item>\n\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n                style={{position: \"relative\"}}\n              >\n                <Select\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  placeholder=\"Alias network\"\n                  name=\"color\"\n                  options={ALIAS_CHAINS}\n                  theme={(theme) => ({\n                    ...theme,\n                    borderRadius: 0,\n                    colors: {\n                      ...theme.colors,\n                      primary25: '#e20880',\n                      primary: '#e20880',\n                    },\n                  })}\n                  onChange={(selectedOption) => {\n                    setChainDetails(selectedOption.value)\n                  }}\n                />\n                <Input\n                  placeholder=\"Your Channel's Alias address\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  style={{paddingLeft: \"22%\"}}\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1rem\"\n                  bg=\"#fff\"\n                  value={channelAlias}\n                  onChange={(e) => {\n                    setChannelAlias(e.target.value);\n                  }}\n                />\n              </Item>\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <TextField\n                  required\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\n                  rows=\"4\"\n                  maxlength=\"200\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  weight=\"400\"\n                  border=\"1px solid #000\"\n                  bg=\"#fff\"\n                  value={channelInfo}\n                  onChange={(e) => {\n                    setChannelInfo(e.target.value);\n                  }}\n                  autocomplete=\"off\"\n                />\n              </Item>\n\n              <ItemH\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"center\"\n              >\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                  <FiLink size={24} color=\"#000\" />\n                </Item>\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Call to Action Link\"\n                    padding=\"12px\"\n                    border=\"1px solid #000\"\n                    radius=\"4px\"\n                    weight=\"400\"\n                    bg=\"#f1f1f1\"\n                    value={channelURL}\n                    onChange={(e) => {\n                      setChannelURL(e.target.value);\n                    }}\n                  />\n                  {channelURL.trim().length == 0 && (\n                    <Span\n                      padding=\"4px 10px\"\n                      right=\"0px\"\n                      top=\"0px\"\n                      pos=\"absolute\"\n                      color=\"#fff\"\n                      bg=\"#000\"\n                      size=\"0.7rem\"\n                      z=\"1\"\n                    >\n                      Channel's Website URL\n                    </Span>\n                  )}\n                </Item>\n              </ItemH>\n\n              <Item\n                margin=\"15px 0px 0px 0px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Button\n                  bg=\"#e20880\"\n                  color=\"#fff\"\n                  flex=\"1\"\n                  radius=\"0px\"\n                  padding=\"20px 10px\"\n                  disabled={processing == 1 ? true : false}\n                >\n                  {processing == 1 && (\n                    <Loader type=\"Oval\" color=\"#fff\" height={24} width={24} />\n                  )}\n                  {processing != 1 && (\n                    <Input\n                      cursor=\"hand\"\n                      textTransform=\"uppercase\"\n                      color=\"#fff\"\n                      weight=\"400\"\n                      size=\"0.8em\"\n                      spacing=\"0.2em\"\n                      type=\"submit\"\n                      value=\"Setup Channel\"\n                    />\n                  )}\n                </Button>\n              </Item>\n            </FormSubmision>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Setup Progress */}\n      {(processing == 1 || processing == 3) && (\n        <Section>\n          <Content padding=\"0px 0px 0px 0px\">\n            {processing == 1 && (\n              <Item margin=\"20px 0px 10px 0px\">\n                <Loader type=\"Oval\" color=\"#000\" height={24} width={24} />\n              </Item>\n            )}\n\n            <Item\n              color=\"#fff\"\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\n              padding=\"10px 15px\"\n              margin=\"15px 0px\"\n            >\n              <Span\n                color=\"#fff\"\n                textTransform=\"uppercase\"\n                spacing=\"0.1em\"\n                weight=\"400\"\n                size=\"1em\"\n              >\n                {processingInfo}\n              </Span>\n            </Item>\n          </Content>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Step = styled.div`\n  height: 12px;\n  width: 12px;\n  background: ${(props) => props.bg || \"#fff\"};\n  border: 4px solid ${(props) => props.activeBG || \"#000\"};\n  border-radius: 100%;\n\n  ${({ type }) =>\n    type == \"active\" &&\n    css`\n      background: ${(props) => props.activeBG || \"#ddd\"};\n      border: 4px solid #00000022;\n    `};\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  height: 5px;\n  background: #f1f1f1;\n  right: 0;\n  left: 0;\n  margin: 0px 10px;\n  z-index: -1;\n`;\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`;\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`;\n\nconst Info2 = styled(Info)``;\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`;\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n`;\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`;\n\nconst Text = styled.span``;\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${(props) => props.theme || \"#674c9f\"};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`;\nconst Minter = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 10px 20px;\n  border-radius: 10px;\n  font-size: 15px;\n  // font-size: 11px;\n`;\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #e20880;\n  // background: #674c9f;\n`;\n\n// Export Default\nexport default CreateChannel;\n","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"40px 0px\"};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: ${props => props.position || 'relative'};\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"initial\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  width: ${props => props.width || \"initial\" };\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"initial\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  text-transform: ${props => props.textTransform || \"initial\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n"],"sourceRoot":""}